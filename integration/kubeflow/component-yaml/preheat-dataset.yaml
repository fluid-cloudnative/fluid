# PIPELINE DEFINITION
# Name: preheat-dataset
# Inputs:
#    dataset_name: str
#    namespace: str
components:
  comp-preheat-dataset:
    executorLabel: exec-preheat-dataset
    inputDefinitions:
      parameters:
        dataset_name:
          parameterType: STRING
        namespace:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-preheat-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preheat_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.4.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'git+https://github.com/fluid-cloudnative/fluid-client-python.git'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preheat_dataset(dataset_name: str, namespace: str):\n    import\
          \ logging\n    from fluid import DataLoad, DataLoadSpec, FluidClient\n \
          \   from kubernetes import client as k8s_client\n\n    fluid_client = FluidClient()\n\
          \n    FLUID_GROUP = \"data.fluid.io\"\n    FLUID_VERSION = \"v1alpha1\"\n\
          \n    dataload = DataLoad(\n        api_version=\"%s/%s\" % (FLUID_GROUP,\
          \ FLUID_VERSION),\n        kind=\"DataLoad\",\n        metadata=k8s_client.V1ObjectMeta(\n\
          \            name=\"%s-loader\" % dataset_name,\n            namespace=namespace\n\
          \        ),\n        spec=DataLoadSpec(\n            dataset={\n       \
          \         \"name\": dataset_name,\n                \"namespace\": namespace\n\
          \            }\n        )\n    )\n\n    fluid_client.create_data_operation(data_op=dataload,\
          \ wait=True)\n\n    logging.info(f\"Load Dataset \\\"{namespace}/{dataset_name}\\\
          \"  successfully\")\n\n"
        image: python:3.7
pipelineInfo:
  name: preheat-dataset
root:
  dag:
    tasks:
      preheat-dataset:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preheat-dataset
        inputs:
          parameters:
            dataset_name:
              componentInputParameter: dataset_name
            namespace:
              componentInputParameter: namespace
        taskInfo:
          name: preheat-dataset
  inputDefinitions:
    parameters:
      dataset_name:
        parameterType: STRING
      namespace:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.4.0
