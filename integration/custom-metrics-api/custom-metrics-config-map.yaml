apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: monitoring
data:
  config.yaml: |
    rules:
    #- seriesQuery: 'Cluster_CapacityUsed{fluid_runtime!="",instance!="",pod!="",job="alluxio master",namespace!=""}'
    #  seriesFilters: []
    #  resources:
    #    overrides:
    #      namespace:
    #        resource: namespace
    #      pod:
    #        resource: pod
    #  name:
    #    matches: "^(.*)"
    #    as: "${1}"
    #  metricsQuery: <<.Series>>{<<.LabelMatchers>>}
    #- seriesQuery: 'Cluster_CapacityTotal{fluid_runtime!="",instance!="",pod!="",job="alluxio master",namespace!=""}'
    #  seriesFilters: []
    #  resources:
    #    overrides:
    #      namespace:
    #        resource: namespace
    #      pod:
    #        resource: pod
    #  name:
    #    matches: "^(.*)"
    #    as: "${1}"
    #  metricsQuery: <<.Series>>{<<.LabelMatchers>>}
    - seriesQuery: '{__name__=~"Cluster_(CapacityTotal|CapacityUsed)",fluid_runtime!="",instance!="",pod!="",job="alluxio master",namespace!=""}'
      seriesFilters:
      - is: ^Cluster_(CapacityTotal|CapacityUsed)$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod:
            resource: pods
          #fluid_runtime: {group: "data.fluid.io", resource: "alluxioruntime"}
      name:
        matches: "^(.*)"
        as: "capacity_used_rate"
      metricsQuery: ceil(Cluster_CapacityUsed{<<.LabelMatchers>>}*100/(Cluster_CapacityTotal{<<.LabelMatchers>>})) 
      #metricsQuery: ceil(Cluster_CapacityTotal{<<.LabelMatchers>>}/(Cluster_CapacityUsed{<<.LabelMatchers>>}+100)) 
      
      #metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>})
          #fluid_runtime: {group: "data.fluid.io", resource: "alluxioruntime"}
      #name:
      #  matches: (.*) 
      #  as: ""

    #rules:
    #- seriesQuery: 'Cluster_CapacityFree{fluid_runtime!="",instance!="",job="alluxio master",namespace!=""}'
    #  seriesFilters: []
    #  resources:
    #    overrides:
    #      namespace:
    #        resource: namespace
    #      fluid_runtime: {group: "data.fluid.io", resource: "alluxioruntime"}
    #  name:
    #    matches: (.*) 
    #    as: ""
      #metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
   # - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
   #   seriesFilters: []
   #   resources:
   #     overrides:
   #       namespace:
   #         resource: namespace
   #       pod_name:
   #         resource: pod
   #   name:
   #     matches: ^container_(.*)_seconds_total$
   #     as: ""
   #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
   # - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
   #   seriesFilters:
   #   - isNot: ^container_.*_seconds_total$
   #   resources:
   #     overrides:
   #       namespace:
   #         resource: namespace
   #       pod_name:
   #         resource: pod
   #   name:
   #     matches: ^container_(.*)_total$
   #     as: ""
   #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
   # - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
   #   seriesFilters:
   #   - isNot: ^container_.*_total$
   #   resources:
   #     overrides:
   #       namespace:
   #         resource: namespace
   #       pod_name:
   #         resource: pod
   #   name:
   #     matches: ^container_(.*)$
   #     as: ""
   #   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
   # - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
   #   seriesFilters:
   #   - isNot: .*_total$
   #   resources:
   #     template: <<.Resource>>
   #   name:
   #     matches: ""
   #     as: ""
   #   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
   # - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
   #   seriesFilters:
   #   - isNot: .*_seconds_total
   #   resources:
   #     template: <<.Resource>>
   #   name:
   #     matches: ^(.*)_total$
   #     as: ""
   #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
   # - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
   #   seriesFilters: []
   #   resources:
   #     template: <<.Resource>>
   #   name:
   #     matches: ^(.*)_seconds_total$
   #     as: ""
   #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
   # resourceRules:
   #   cpu:
   #     containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
   #     nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[1m])) by (<<.GroupBy>>)
   #     resources:
   #       overrides:
   #         instance:
   #           resource: node
   #         namespace:
   #           resource: namespace
   #         pod_name:
   #           resource: pod
   #     containerLabel: container_name
   #   memory:
   #     containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
   #     nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
   #     resources:
   #       overrides:
   #         instance:
   #           resource: node
   #         namespace:
   #           resource: namespace
   #         pod_name:
   #           resource: pod
   #     containerLabel: container_name
   #   window: 1m
