name: Project Check

on:
  push:
    branches: [ master, release-* ]
  pull_request:
    branches: [ master, release-* ]

env:
  GO_VERSION: 1.23.7

# Declare default permissions as read only.
permissions: read-all

jobs:
  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dominikh/staticcheck-action@024238d2898c874f26d723e7d0ff4308c35589a2 # v1

  lint:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: auto
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/fluid-cloudnative/fluid
    steps:
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ${{ env.GOPATH }}/src/github.com/fluid-cloudnative/fluid

      - name: Lint golang code
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2
        with:
          version: latest
          args: --timeout 10m --verbose

      - name: Lint preparation
        run: |
          arch=$(go env GOARCH)
          os=$(go env GOOS)
          curl -L https://get.helm.sh/helm-v3.11.1-${os}-${arch}.tar.gz | tar -xz -C /tmp
          chmod u+x /tmp/${os}-${arch}/helm && sudo mv /tmp/${os}-${arch}/helm /usr/local/bin/helm

      - name: CRD validation check
        run: |
          make update-crd
          git status --porcelain
          if [ -z "`git status --porcelain`" ]; then echo "CRD validation passed."; else echo "CRD validation failed. Please use 'make update-crd' to keep CRDs latest"; exit 1; fi
      
      - name: OpenAPI validation check
        run: |
          make gen-openapi
          echo $(git status --porcelain | grep generated)
          if [ -z "$(git status --porcelain | grep generated)" ]; then echo "openapi validation passed."; else echo "openapi validation failed. Please use 'make gen-openapi' to update openapi"; exit 1; fi

      - name: Code fmt check
        run: |
          gofmt -l ./pkg ./cmd ./api | grep . && echo "Please run "make fmt" to verify gofmt" && exit 1 || exit 0

      - name: Project lint
        run: |
          test -z "$(go fmt ./... 2>/dev/null | tee /dev/stderr)" || (echo "please format Go code with 'gofmt'")
          go vet ./...
          find ./charts | grep Chart.yaml | xargs dirname | xargs helm lint

  build:
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: auto
      CI_TEST_FLAGS: -race -coverprofile=coverage.txt -covermode=atomic
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/fluid-cloudnative/fluid
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        path: ${{ env.GOPATH }}/src/github.com/fluid-cloudnative/fluid

    - name: CI Preparation
      run: |
        arch=$(go env GOARCH)
        os=$(go env GOOS)
        curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_${os}_${arch}.tar.gz | tar -xz -C /tmp/
        sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
        export PATH=$PATH:/usr/local/kubebuilder/bin

    - name: CI script
      run: |
        make build
        make test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
