---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: databackups.data.fluid.io
spec:
  group: data.fluid.io
  names:
    categories:
    - fluid
    kind: DataBackup
    listKind: DataBackupList
    plural: databackups
    shortNames:
    - backup
    singular: databackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.dataset
      name: Dataset
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.infos.BackupLocationPath
      name: Path
      type: string
    - jsonPath: .status.infos.BackupLocationNodeName
      name: NodeName
      type: string
    - jsonPath: .status.duration
      name: Duration
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataBackup is the Schema for the backup API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataBackupSpec defines the desired state of DataBackup
            properties:
              backupPath:
                description: BackupPath defines the target path to save data of the
                  DataBackup
                type: string
              dataset:
                description: Dataset defines the target dataset of the DataBackup
                type: string
              runAfter:
                description: Specifies that the preceding operation in a workflow
                properties:
                  apiVersion:
                    description: API version of the referent operation
                    type: string
                  kind:
                    description: Kind specifies the type of the referent operation
                    enum:
                    - DataLoad
                    - DataBackup
                    - DataMigrate
                    - DataProcess
                    type: string
                  name:
                    description: Name specifies the name of the referent operation
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of the referent
                      operation.
                    type: string
                required:
                - kind
                - name
                type: object
              runAs:
                description: Manage the user to run Alluxio DataBackup
                properties:
                  gid:
                    description: The gid to run the alluxio runtime
                    format: int64
                    type: integer
                  group:
                    description: The group name to run the alluxio runtime
                    type: string
                  uid:
                    description: The uid to run the alluxio runtime
                    format: int64
                    type: integer
                  user:
                    description: The user name to run the alluxio runtime
                    type: string
                required:
                - gid
                - group
                - uid
                - user
                type: object
              ttlSecondsAfterFinished:
                description: TTLSecondsAfterFinished is the time second to clean up
                  data operations after finished or failed
                format: int32
                type: integer
            type: object
          status:
            description: OperationStatus defines the observed state of operation
            properties:
              conditions:
                description: Conditions consists of transition information on operation's
                  Phase
                items:
                  description: Condition explains the transitions on phase
                  properties:
                    lastProbeTime:
                      description: LastProbeTime describes last time this condition
                        was updated.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime describes last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating
                        details about the transition
                      type: string
                    reason:
                      description: Reason for the condition's last transition
                      type: string
                    status:
                      description: Status of the condition, one of `True`, `False`
                        or `Unknown`
                      type: string
                    type:
                      description: Type of condition, either `Complete` or `Failed`
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              duration:
                description: Duration tell user how much time was spent to operation
                type: string
              infos:
                additionalProperties:
                  type: string
                description: Infos operation customized name-value
                type: object
              lastScheduleTime:
                description: LastScheduleTime is the last time the cron operation
                  was scheduled
                format: date-time
                type: string
              lastSuccessfulTime:
                description: LastSuccessfulTime is the last time the cron operation
                  successfully completed
                format: date-time
                type: string
              phase:
                description: Phase describes current phase of operation
                type: string
              waitingFor:
                description: WaitingStatus stores information about waiting operation.
                properties:
                  operationComplete:
                    description: OperationComplete indicates if the preceding operation
                      is complete
                    type: boolean
                type: object
            required:
            - conditions
            - duration
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
