Name:         alluxioruntimes.data.fluid.io
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.14.0
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2024-10-21T10:54:01Z
  Generation:          1
  Resource Version:    980
  UID:                 948d6060-9b38-4fe3-83f2-2316370b7c48
Spec:
  Conversion:
    Strategy:  None
  Group:       data.fluid.io
  Names:
    Categories:
      fluid
    Kind:       AlluxioRuntime
    List Kind:  AlluxioRuntimeList
    Plural:     alluxioruntimes
    Short Names:
      alluxio
    Singular:  alluxioruntime
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .status.masterNumberReady
      Name:       Ready Masters
      Priority:   10
      Type:       integer
      Json Path:  .status.desiredMasterNumberScheduled
      Name:       Desired Masters
      Priority:   10
      Type:       integer
      Json Path:  .status.masterPhase
      Name:       Master Phase
      Type:       string
      Json Path:  .status.workerNumberReady
      Name:       Ready Workers
      Priority:   10
      Type:       integer
      Json Path:  .status.desiredWorkerNumberScheduled
      Name:       Desired Workers
      Priority:   10
      Type:       integer
      Json Path:  .status.workerPhase
      Name:       Worker Phase
      Type:       string
      Json Path:  .status.fuseNumberReady
      Name:       Ready Fuses
      Priority:   10
      Type:       integer
      Json Path:  .status.desiredFuseNumberScheduled
      Name:       Desired Fuses
      Priority:   10
      Type:       integer
      Json Path:  .status.fusePhase
      Name:       Fuse Phase
      Type:       string
      Json Path:  .status.apiGateway.endpoint
      Name:       API Gateway
      Priority:   10
      Type:       string
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
    Name:         v1alpha1
    Schema:
      openAPIV3Schema:
        Description:  AlluxioRuntime is the Schema for the alluxioruntimes API
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object.
Servers should convert recognized schemas to the latest internal value, and
may reject unrecognized values.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:  string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents.
Servers may infer this from the endpoint the client submits requests to.
Cannot be updated.
In CamelCase.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:  string
          Metadata:
            Type:  object
          Spec:
            Description:  AlluxioRuntimeSpec defines the desired state of AlluxioRuntime
            Properties:
              Alluxio Version:
                Description:  The version information that instructs fluid to orchestrate a particular version of Alluxio.
                Properties:
                  Image:
                    Description:  Image (e.g. alluxio/alluxio)
                    Type:         string
                  Image Pull Policy:
                    Description:  One of the three policies: `Always`, `IfNotPresent`, `Never`
                    Type:         string
                  Image Tag:
                    Description:  Image tag (e.g. 2.3.0-SNAPSHOT)
                    Type:         string
                Type:             object
              API Gateway:
                Description:  The component spec of Alluxio API Gateway
                Properties:
                  Enabled:
                    Description:  Enabled or Disabled for the components. For now, only  API Gateway is enabled or disabled.
                    Type:         boolean
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio component. <br>
                    Type:         object
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the master to fit on a node
                    Type:         object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Ports:
                    Additional Properties:
                      Type:       integer
                    Description:  Ports used by Alluxio(e.g. rpc: 19998 for master)
                    Type:         object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for the Alluxio component. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Replicas:
                    Description:  Replicas is the desired number of replicas of the given template.
If unspecified, defaults to 1.
replicas is the min replicas of dataset in the cluster
                    Format:   int32
                    Minimum:  1
                    Type:     integer
                  Resources:
                    Description:  Resources that will be requested by the Alluxio component. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
              Data:
                Description:  Management strategies for the dataset to which the runtime is bound
                Properties:
                  Pin:
                    Description:  Pin the dataset or not. Refer to <a href="https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#pin">Alluxio User-CLI pin</a>
                    Type:         boolean
                  Replicas:
                    Description:  The copies of the dataset
                    Format:       int32
                    Type:         integer
                Type:             object
              Disable Prometheus:
                Description:  Disable monitoring for Alluxio Runtime
Prometheus is enabled by default
                Type:  boolean
              Fuse:
                Description:  The component spec of Alluxio Fuse
                Properties:
                  Args:
                    Description:  Arguments that will be passed to Alluxio Fuse
                    Items:
                      Type:  string
                    Type:    array
                  Clean Policy:
                    Description:  CleanPolicy decides when to clean Alluxio Fuse pods.
Currently Fluid supports two policies: OnDemand and OnRuntimeDeleted
OnDemand cleans fuse pod once the fuse pod on some node is not needed
OnRuntimeDeleted cleans fuse pod only when the cache runtime is deleted
Defaults to OnRuntimeDeleted
                    Type:  string
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio Fuse
                    Type:         object
                  Image:
                    Description:  Image for Alluxio Fuse(e.g. alluxio/alluxio-fuse)
                    Type:         string
                  Image Pull Policy:
                    Description:  One of the three policies: `Always`, `IfNotPresent`, `Never`
                    Type:         string
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Image Tag:
                    Description:  Image Tag for Alluxio Fuse(e.g. 2.3.0-SNAPSHOT)
                    Type:         string
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the fuse client to fit on a node,
this option only effect when global is enabled
                    Type:  object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's fuse pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for Alluxio System. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Resources:
                    Description:  Resources that will be requested by Alluxio Fuse. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
              Hadoop Config:
                Description:  Name of the configMap used to support HDFS configurations when using HDFS as Alluxio's UFS. The configMap
must be in the same namespace with the AlluxioRuntime. The configMap should contain user-specific HDFS conf files in it.
For now, only "hdfs-site.xml" and "core-site.xml" are supported. It must take the filename of the conf file as the key and content
of the file as the value.
                Type:  string
              Image Pull Secrets:
                Description:  ImagePullSecrets that will be used to pull images
                Items:
                  Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                  Properties:
                    Name:
                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                      Type:                     string
                  Type:                         object
                  X - Kubernetes - Map - Type:  atomic
                Type:                           array
              Init Users:
                Description:  The spec of init users
                Properties:
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by initialize the users for runtime
                    Type:         object
                  Image:
                    Description:  Image for initialize the users for runtime(e.g. alluxio/alluxio-User init)
                    Type:         string
                  Image Pull Policy:
                    Description:  One of the three policies: `Always`, `IfNotPresent`, `Never`
                    Type:         string
                  Image Tag:
                    Description:  Image Tag for initialize the users for runtime(e.g. 2.3.0-SNAPSHOT)
                    Type:         string
                  Resources:
                    Description:  Resources that will be requested by initialize the users for runtime. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                Type:          object
              Job Master:
                Description:  The component spec of Alluxio job master
                Properties:
                  Enabled:
                    Description:  Enabled or Disabled for the components. For now, only  API Gateway is enabled or disabled.
                    Type:         boolean
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio component. <br>
                    Type:         object
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the master to fit on a node
                    Type:         object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Ports:
                    Additional Properties:
                      Type:       integer
                    Description:  Ports used by Alluxio(e.g. rpc: 19998 for master)
                    Type:         object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for the Alluxio component. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Replicas:
                    Description:  Replicas is the desired number of replicas of the given template.
If unspecified, defaults to 1.
replicas is the min replicas of dataset in the cluster
                    Format:   int32
                    Minimum:  1
                    Type:     integer
                  Resources:
                    Description:  Resources that will be requested by the Alluxio component. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
              Job Worker:
                Description:  The component spec of Alluxio job Worker
                Properties:
                  Enabled:
                    Description:  Enabled or Disabled for the components. For now, only  API Gateway is enabled or disabled.
                    Type:         boolean
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio component. <br>
                    Type:         object
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the master to fit on a node
                    Type:         object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Ports:
                    Additional Properties:
                      Type:       integer
                    Description:  Ports used by Alluxio(e.g. rpc: 19998 for master)
                    Type:         object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for the Alluxio component. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Replicas:
                    Description:  Replicas is the desired number of replicas of the given template.
If unspecified, defaults to 1.
replicas is the min replicas of dataset in the cluster
                    Format:   int32
                    Minimum:  1
                    Type:     integer
                  Resources:
                    Description:  Resources that will be requested by the Alluxio component. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
              Jvm Options:
                Description:  Options for JVM
                Items:
                  Type:  string
                Type:    array
              Management:
                Description:  RuntimeManagement defines policies when managing the runtime
                Properties:
                  Clean Cache Policy:
                    Description:  CleanCachePolicy defines the policy of cleaning cache when shutting down the runtime
                    Properties:
                      Grace Period Seconds:
                        Default:      60
                        Description:  Optional duration in seconds the cache needs to clean gracefully. May be decreased in delete runtime request.
Value must be non-negative integer. The value zero indicates clean immediately via the timeout
command (no opportunity to shut down).
If this value is nil, the default grace period will be used instead.
The grace period is the duration in seconds after the processes running in the pod are sent
a termination signal and the time when the processes are forcibly halted with timeout command.
Set this value longer than the expected cleanup time for your process.
                        Format:  int32
                        Type:    integer
                      Max Retry Attempts:
                        Default:      3
                        Description:  Optional max retry Attempts when cleanCache function returns an error after execution, runtime attempts
to run it three more times by default. With Maximum Retry Attempts, you can customize the maximum number
of retries. This gives you the option to continue processing retries.
                        Format:  int32
                        Type:    integer
                    Type:        object
                  Metadata Sync Policy:
                    Description:  MetadataSyncPolicy defines the policy of syncing metadata when setting up the runtime. If not set,
                    Properties:
                      Auto Sync:
                        Description:  AutoSync enables automatic metadata sync when setting up a runtime. If not set, it defaults to true.
                        Type:         boolean
                    Type:             object
                Type:                 object
              Master:
                Description:  The component spec of Alluxio master
                Properties:
                  Enabled:
                    Description:  Enabled or Disabled for the components. For now, only  API Gateway is enabled or disabled.
                    Type:         boolean
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio component. <br>
                    Type:         object
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the master to fit on a node
                    Type:         object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Ports:
                    Additional Properties:
                      Type:       integer
                    Description:  Ports used by Alluxio(e.g. rpc: 19998 for master)
                    Type:         object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for the Alluxio component. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Replicas:
                    Description:  Replicas is the desired number of replicas of the given template.
If unspecified, defaults to 1.
replicas is the min replicas of dataset in the cluster
                    Format:   int32
                    Minimum:  1
                    Type:     integer
                  Resources:
                    Description:  Resources that will be requested by the Alluxio component. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
              Pod Metadata:
                Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                Properties:
                  Annotations:
                    Additional Properties:
                      Type:       string
                    Description:  Annotations are annotations of pod specification
                    Type:         object
                  Labels:
                    Additional Properties:
                      Type:       string
                    Description:  Labels are labels of pod specification
                    Type:         object
                Type:             object
              Properties:
                Additional Properties:
                  Type:       string
                Description:  Configurable properties for Alluxio system. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                Type:  object
              Replicas:
                Description:  The replicas of the worker, need to be specified
                Format:       int32
                Type:         integer
              Run As:
                Description:  Manage the user to run Alluxio Runtime
                Properties:
                  Gid:
                    Description:  The gid to run the alluxio runtime
                    Format:       int64
                    Type:         integer
                  Group:
                    Description:  The group name to run the alluxio runtime
                    Type:         string
                  UID:
                    Description:  The uid to run the alluxio runtime
                    Format:       int64
                    Type:         integer
                  User:
                    Description:  The user name to run the alluxio runtime
                    Type:         string
                Required:
                  gid
                  group
                  uid
                  user
                Type:  object
              Scale:
                Properties:
                  Scale In Slots:
                    Items:
                      Type:  integer
                    Type:    array
                  Worker Type:
                    Description:  WorkerType defines the type of worker resource
                    Type:         string
                Type:             object
              Tieredstore:
                Description:  Tiered storage used by Alluxio
                Properties:
                  Levels:
                    Description:  configurations for multiple tiers
                    Items:
                      Description:  Level describes configurations a tier needs. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/core-services/Caching.html#configuring-tiered-storage">Configuring Tiered Storage</a> for more info
                      Properties:
                        High:
                          Description:  Ratio of high watermark of the tier (e.g. 0.9)
                          Type:         string
                        Low:
                          Description:  Ratio of low watermark of the tier (e.g. 0.7)
                          Type:         string
                        Mediumtype:
                          Description:  Medium Type of the tier. One of the three types: `MEM`, `SSD`, `HDD`
                          Enum:
                            MEM
                            SSD
                            HDD
                          Type:  string
                        Path:
                          Description:  File paths to be used for the tier. Multiple paths are supported.
Multiple paths should be separated with comma. For example: "/mnt/cache1,/mnt/cache2".
                          Min Length:  1
                          Type:        string
                        Quota:
                          Any Of:
                            Type:       integer
                            Type:       string
                          Description:  Quota for the whole tier. (e.g. 100Gi)
Please note that if there're multiple paths used for this tierstore,
the quota will be equally divided into these paths. If you'd like to
set quota for each, path, see QuotaList for more information.
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Quota List:
                          Description:  QuotaList are quotas used to set quota on multiple paths. Quotas should be separated with comma.
Quotas in this list will be set to paths with the same order in Path.
For example, with Path defined with "/mnt/cache1,/mnt/cache2" and QuotaList set to "100Gi, 50Gi",
then we get 100GiB cache storage under "/mnt/cache1" and 50GiB under "/mnt/cache2".
Also note that num of quotas must be consistent with the num of paths defined in Path.
                          Pattern:  ^((\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+)))),)+((\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?)$
                          Type:     string
                        Volume Source:
                          Description:  VolumeSource is the volume source of the tier. It follows the form of corev1.VolumeSource.
For now, users should only specify VolumeSource when VolumeType is set to emptyDir.
                          Properties:
                            Aws Elastic Block Store:
                              Description:  awsElasticBlockStore represents an AWS Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:  string
                                Partition:
                                  Description:  partition is the partition in the volume that you want to mount.
If omitted, the default is to mount by volume name.
Examples: For volume /dev/sda1, you specify the partition as "1".
Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                  Format:  int32
                                  Type:    integer
                                Read Only:
                                  Description:  readOnly value true will force the readOnly setting in VolumeMounts.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  Type:  boolean
                                Volume ID:
                                  Description:  volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  Type:  string
                              Required:
                                volumeID
                              Type:  object
                            Azure Disk:
                              Description:  azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                              Properties:
                                Caching Mode:
                                  Description:  cachingMode is the Host Caching mode: None, Read Only, Read Write.
                                  Type:         string
                                Disk Name:
                                  Description:  diskName is the Name of the data disk in the blob storage
                                  Type:         string
                                Disk URI:
                                  Description:  diskURI is the URI of data disk in the blob storage
                                  Type:         string
                                Fs Type:
                                  Description:  fsType is Filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:  string
                                Kind:
                                  Description:  kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
                                  Type:         string
                                Read Only:
                                  Description:  readOnly Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                              Required:
                                diskName
                                diskURI
                              Type:  object
                            Azure File:
                              Description:  azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                              Properties:
                                Read Only:
                                  Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Secret Name:
                                  Description:  secretName is the  name of secret that contains Azure Storage Account Name and Key
                                  Type:         string
                                Share Name:
                                  Description:  shareName is the azure share Name
                                  Type:         string
                              Required:
                                secretName
                                shareName
                              Type:  object
                            Cephfs:
                              Description:  cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                              Properties:
                                Monitors:
                                  Description:  monitors is Required: Monitors is a collection of Ceph monitors
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Items:
                                    Type:  string
                                  Type:    array
                                Path:
                                  Description:  path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                                  Type:         string
                                Read Only:
                                  Description:  readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:  boolean
                                Secret File:
                                  Description:  secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:  string
                                Secret Ref:
                                  Description:  secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                User:
                                  Description:  user is optional: User is the rados user name, default is admin
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:  string
                              Required:
                                monitors
                              Type:  object
                            Cinder:
                              Description:  cinder represents a cinder volume attached and mounted on kubelets host machine.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:  string
                                Read Only:
                                  Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef is optional: points to a secret object containing parameters used to connect
to OpenStack.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Volume ID:
                                  Description:  volumeID used to identify the volume in cinder.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:  string
                              Required:
                                volumeID
                              Type:  object
                            Config Map:
                              Description:  configMap represents a configMap that should populate this volume
                              Properties:
                                Default Mode:
                                  Description:  defaultMode is optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                  Format:  int32
                                  Type:    integer
                                Items:
                                  Description:  items if unspecified, each key-value pair in the Data field of the referenced
ConfigMap will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the ConfigMap,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                  Items:
                                    Description:  Maps a string key to a path within a volume.
                                    Properties:
                                      Key:
                                        Description:  key is the key to project.
                                        Type:         string
                                      Mode:
                                        Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                        Format:  int32
                                        Type:    integer
                                      Path:
                                        Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                        Type:  string
                                    Required:
                                      key
                                      path
                                    Type:  object
                                  Type:    array
                                Name:
                                  Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:  string
                                Optional:
                                  Description:              optional specify whether the ConfigMap or its keys must be defined
                                  Type:                     boolean
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Csi:
                              Description:  csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                              Properties:
                                Driver:
                                  Description:  driver is the name of the CSI driver that handles this volume.
Consult with your admin for the correct name as registered in the cluster.
                                  Type:  string
                                Fs Type:
                                  Description:  fsType to mount. Ex. "ext4", "xfs", "ntfs".
If not provided, the empty value is passed to the associated CSI driver
which will determine the default filesystem to apply.
                                  Type:  string
                                Node Publish Secret Ref:
                                  Description:  nodePublishSecretRef is a reference to the secret object containing
sensitive information to pass to the CSI driver to complete the CSI
NodePublishVolume and NodeUnpublishVolume calls.
This field is optional, and  may be empty if no secret is required. If the
secret object contains more than one secret, all secret references are passed.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Read Only:
                                  Description:  readOnly specifies a read-only configuration for the volume.
Defaults to false (read/write).
                                  Type:  boolean
                                Volume Attributes:
                                  Additional Properties:
                                    Type:       string
                                  Description:  volumeAttributes stores driver-specific properties that are passed to the CSI
driver. Consult your driver's documentation for supported values.
                                  Type:  object
                              Required:
                                driver
                              Type:  object
                            Downward API:
                              Description:  downwardAPI represents downward API about the pod that should populate this volume
                              Properties:
                                Default Mode:
                                  Description:  Optional: mode bits to use on created files by default. Must be a
Optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                  Format:  int32
                                  Type:    integer
                                Items:
                                  Description:  Items is a list of downward API volume file
                                  Items:
                                    Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                    Properties:
                                      Field Ref:
                                        Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                        Properties:
                                          API Version:
                                            Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            Type:         string
                                          Field Path:
                                            Description:  Path of the field to select in the specified API version.
                                            Type:         string
                                        Required:
                                          fieldPath
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  atomic
                                      Mode:
                                        Description:  Optional: mode bits used to set permissions on this file, must be an octal value
between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                        Format:  int32
                                        Type:    integer
                                      Path:
                                        Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                        Type:         string
                                      Resource Field Ref:
                                        Description:  Selects a resource of the container: only resources limits and requests
(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                        Properties:
                                          Container Name:
                                            Description:  Container name: required for volumes, optional for env vars
                                            Type:         string
                                          Divisor:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Resource:
                                            Description:  Required: resource to select
                                            Type:         string
                                        Required:
                                          resource
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  atomic
                                    Required:
                                      path
                                    Type:  object
                                  Type:    array
                              Type:        object
                            Empty Dir:
                              Description:  emptyDir represents a temporary directory that shares a pod's lifetime.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              Properties:
                                Medium:
                                  Description:  medium represents what type of storage medium should back this directory.
The default is "" which means to use the node's default medium.
Must be an empty string (default) or Memory.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  Type:  string
                                Size Limit:
                                  Any Of:
                                    Type:       integer
                                    Type:       string
                                  Description:  sizeLimit is the total amount of local storage required for this EmptyDir volume.
The size limit is also applicable for memory medium.
The maximum usage on memory medium EmptyDir would be the minimum value between
the SizeLimit specified here and the sum of memory limits of all containers in a pod.
The default is nil which means that the limit is undefined.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                              Type:                                    object
                            Ephemeral:
                              Description:  ephemeral represents a volume that is handled by a cluster storage driver.
The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
and deleted when the pod is removed.


Use this if:
a) the volume is only needed while the pod runs,
b) features of normal volumes like restoring from snapshot or capacity
   tracking are needed,
c) the storage driver is specified through a storage class, and
d) the storage driver supports dynamic volume provisioning through
   a PersistentVolumeClaim (see EphemeralVolumeSource for more
   information on the connection between this volume type
   and PersistentVolumeClaim).


Use PersistentVolumeClaim or one of the vendor-specific
APIs for volumes that persist for longer than the lifecycle
of an individual pod.


Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
be used that way - see the documentation of the driver for
more information.


A pod can use both types of ephemeral volumes and
persistent volumes at the same time.
                              Properties:
                                Volume Claim Template:
                                  Description:  Will be used to create a stand-alone PVC to provision the volume.
The pod in which this EphemeralVolumeSource is embedded will be the
owner of the PVC, i.e. the PVC will be deleted together with the
pod.  The name of the PVC will be `<pod name>-<volume name>` where
`<volume name>` is the name from the `PodSpec.Volumes` array
entry. Pod validation will reject the pod if the concatenated name
is not valid for a PVC (for example, too long).


An existing PVC with that name that is not owned by the pod
will *not* be used for the pod to avoid using an unrelated
volume by mistake. Starting the pod is then blocked until
the unrelated PVC is removed. If such a pre-created PVC is
meant to be used by the pod, the PVC has to updated with an
owner reference to the pod once the pod exists. Normally
this should not be necessary, but it may be useful when
manually reconstructing a broken cluster.


This field is read-only and no changes will be made by Kubernetes
to the PVC after it has been created.


Required, must not be nil.
                                  Properties:
                                    Metadata:
                                      Description:  May contain labels and annotations that will be copied into the PVC
when creating it. No other fields are allowed and will be rejected during
validation.
                                      Type:  object
                                    Spec:
                                      Description:  The specification for the PersistentVolumeClaim. The entire content is
copied unchanged into the PVC that gets created from this
template. The same fields as in a PersistentVolumeClaim
are also valid here.
                                      Properties:
                                        Access Modes:
                                          Description:  accessModes contains the desired access modes the volume should have.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                          Items:
                                            Type:  string
                                          Type:    array
                                        Data Source:
                                          Description:  dataSource field can be used to specify either:
* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
* An existing PVC (PersistentVolumeClaim)
If the provisioner or an external controller can support the specified data source,
it will create a new volume based on the contents of the specified data source.
When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                          Properties:
                                            API Group:
                                              Description:  APIGroup is the group for the resource being referenced.
If APIGroup is not specified, the specified Kind must be in the core API group.
For any other third-party types, APIGroup is required.
                                              Type:  string
                                            Kind:
                                              Description:  Kind is the type of resource being referenced
                                              Type:         string
                                            Name:
                                              Description:  Name is the name of resource being referenced
                                              Type:         string
                                          Required:
                                            kind
                                            name
                                          Type:                         object
                                          X - Kubernetes - Map - Type:  atomic
                                        Data Source Ref:
                                          Description:  dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
volume is desired. This may be any object from a non-empty API group (non
core object) or a PersistentVolumeClaim object.
When this field is specified, volume binding will only succeed if the type of
the specified object matches some installed volume populator or dynamic
provisioner.
This field will replace the functionality of the dataSource field and as such
if both fields are non-empty, they must have the same value. For backwards
compatibility, when namespace isn't specified in dataSourceRef,
both fields (dataSource and dataSourceRef) will be set to the same
value automatically if one of them is empty and the other is non-empty.
When namespace is specified in dataSourceRef,
dataSource isn't set to the same value and must be empty.
There are three important differences between dataSource and dataSourceRef:
* While dataSource only allows two specific types of objects, dataSourceRef
  allows any non-core object, as well as PersistentVolumeClaim objects.
* While dataSource ignores disallowed values (dropping them), dataSourceRef
  preserves all values, and generates an error if a disallowed value is
  specified.
* While dataSource only allows local objects, dataSourceRef allows objects
  in any namespaces.
(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          Properties:
                                            API Group:
                                              Description:  APIGroup is the group for the resource being referenced.
If APIGroup is not specified, the specified Kind must be in the core API group.
For any other third-party types, APIGroup is required.
                                              Type:  string
                                            Kind:
                                              Description:  Kind is the type of resource being referenced
                                              Type:         string
                                            Name:
                                              Description:  Name is the name of resource being referenced
                                              Type:         string
                                            Namespace:
                                              Description:  Namespace is the namespace of resource being referenced
Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                              Type:  string
                                          Required:
                                            kind
                                            name
                                          Type:  object
                                        Resources:
                                          Description:  resources represents the minimum resources the volume should have.
If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
that are lower than previous value but must still be higher than capacity recorded in the
status field of the claim.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                          Properties:
                                            Limits:
                                              Additional Properties:
                                                Any Of:
                                                  Type:                              integer
                                                  Type:                              string
                                                Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                X - Kubernetes - Int - Or - String:  true
                                              Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              Type:  object
                                            Requests:
                                              Additional Properties:
                                                Any Of:
                                                  Type:                              integer
                                                  Type:                              string
                                                Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                X - Kubernetes - Int - Or - String:  true
                                              Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              Type:  object
                                          Type:      object
                                        Selector:
                                          Description:  selector is a label query over volumes to consider for binding.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:  string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. This array is replaced during a strategic
merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
map is equivalent to an element of matchExpressions, whose key field is "key", the
operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:                     object
                                          Type:                         object
                                          X - Kubernetes - Map - Type:  atomic
                                        Storage Class Name:
                                          Description:  storageClassName is the name of the StorageClass required by the claim.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                          Type:  string
                                        Volume Attributes Class Name:
                                          Description:  volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
If specified, the CSI driver will create or update the volume with the attributes defined
in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
will be set by the persistentvolume controller if it exists.
If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
exists.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
(Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                          Type:  string
                                        Volume Mode:
                                          Description:  volumeMode defines what type of volume is required by the claim.
Value of Filesystem is implied when not included in claim spec.
                                          Type:  string
                                        Volume Name:
                                          Description:  volumeName is the binding reference to the PersistentVolume backing this claim.
                                          Type:         string
                                      Type:             object
                                  Required:
                                    spec
                                  Type:  object
                              Type:      object
                            Fc:
                              Description:  fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:  string
                                Lun:
                                  Description:  lun is Optional: FC target lun number
                                  Format:       int32
                                  Type:         integer
                                Read Only:
                                  Description:  readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Target WW Ns:
                                  Description:  targetWWNs is Optional: FC target worldwide names (WWNs)
                                  Items:
                                    Type:  string
                                  Type:    array
                                Wwids:
                                  Description:  wwids Optional: FC volume world wide identifiers (wwids)
Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                  Items:
                                    Type:  string
                                  Type:    array
                              Type:        object
                            Flex Volume:
                              Description:  flexVolume represents a generic volume resource that is
provisioned/attached using an exec based plugin.
                              Properties:
                                Driver:
                                  Description:  driver is the name of the driver to use for this volume.
                                  Type:         string
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                  Type:  string
                                Options:
                                  Additional Properties:
                                    Type:       string
                                  Description:  options is Optional: this field holds extra command options if any.
                                  Type:         object
                                Read Only:
                                  Description:  readOnly is Optional: defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef is Optional: secretRef is reference to the secret object containing
sensitive information to pass to the plugin scripts. This may be
empty if no secret object is specified. If the secret object
contains more than one secret, all secrets are passed to the plugin
scripts.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                              Required:
                                driver
                              Type:  object
                            Flocker:
                              Description:  flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                              Properties:
                                Dataset Name:
                                  Description:  datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
should be considered as deprecated
                                  Type:  string
                                Dataset UUID:
                                  Description:  datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                                  Type:         string
                              Type:             object
                            Gce Persistent Disk:
                              Description:  gcePersistentDisk represents a GCE Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Properties:
                                Fs Type:
                                  Description:  fsType is filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:  string
                                Partition:
                                  Description:  partition is the partition in the volume that you want to mount.
If omitted, the default is to mount by volume name.
Examples: For volume /dev/sda1, you specify the partition as "1".
Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Format:  int32
                                  Type:    integer
                                Pd Name:
                                  Description:  pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Type:  string
                                Read Only:
                                  Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Type:  boolean
                              Required:
                                pdName
                              Type:  object
                            Git Repo:
                              Description:  gitRepo represents a git repository at a particular revision.
DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
into the Pod's container.
                              Properties:
                                Directory:
                                  Description:  directory is the target directory name.
Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
git repository.  Otherwise, if specified, the volume will contain the git repository in
the subdirectory with the given name.
                                  Type:  string
                                Repository:
                                  Description:  repository is the URL
                                  Type:         string
                                Revision:
                                  Description:  revision is the commit hash for the specified revision.
                                  Type:         string
                              Required:
                                repository
                              Type:  object
                            Glusterfs:
                              Description:  glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
More info: https://examples.k8s.io/volumes/glusterfs/README.md
                              Properties:
                                Endpoints:
                                  Description:  endpoints is the endpoint name that details Glusterfs topology.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:  string
                                Path:
                                  Description:  path is the Glusterfs volume path.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:  string
                                Read Only:
                                  Description:  readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
Defaults to false.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:  boolean
                              Required:
                                endpoints
                                path
                              Type:  object
                            Host Path:
                              Description:  hostPath represents a pre-existing file or directory on the host
machine that is directly exposed to the container. This is generally
used for system agents or other privileged things that are allowed
to see the host machine. Most containers will NOT need this.
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
---
TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
mount host directories as read/write.
                              Properties:
                                Path:
                                  Description:  path of the directory on the host.
If the path is a symlink, it will follow the link to the real path.
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  Type:  string
                                Type:
                                  Description:  type for HostPath Volume
Defaults to ""
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  Type:  string
                              Required:
                                path
                              Type:  object
                            Iscsi:
                              Description:  iscsi represents an ISCSI Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://examples.k8s.io/volumes/iscsi/README.md
                              Properties:
                                Chap Auth Discovery:
                                  Description:  chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                                  Type:         boolean
                                Chap Auth Session:
                                  Description:  chapAuthSession defines whether support iSCSI Session CHAP authentication
                                  Type:         boolean
                                Fs Type:
                                  Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:  string
                                Initiator Name:
                                  Description:  initiatorName is the custom iSCSI Initiator Name.
If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
<target portal>:<volume name> will be created for the connection.
                                  Type:  string
                                Iqn:
                                  Description:  iqn is the target iSCSI Qualified Name.
                                  Type:         string
                                Iscsi Interface:
                                  Description:  iscsiInterface is the interface Name that uses an iSCSI transport.
Defaults to 'default' (tcp).
                                  Type:  string
                                Lun:
                                  Description:  lun represents iSCSI Target Lun number.
                                  Format:       int32
                                  Type:         integer
                                Portals:
                                  Description:  portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
is other than default (typically TCP ports 860 and 3260).
                                  Items:
                                    Type:  string
                                  Type:    array
                                Read Only:
                                  Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef is the CHAP Secret for iSCSI target and initiator authentication
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Target Portal:
                                  Description:  targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
is other than default (typically TCP ports 860 and 3260).
                                  Type:  string
                              Required:
                                iqn
                                lun
                                targetPortal
                              Type:  object
                            Nfs:
                              Description:  nfs represents an NFS mount on the host that shares a pod's lifetime
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Properties:
                                Path:
                                  Description:  path that is exported by the NFS server.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:  string
                                Read Only:
                                  Description:  readOnly here will force the NFS export to be mounted with read-only permissions.
Defaults to false.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:  boolean
                                Server:
                                  Description:  server is the hostname or IP address of the NFS server.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:  string
                              Required:
                                path
                                server
                              Type:  object
                            Persistent Volume Claim:
                              Description:  persistentVolumeClaimVolumeSource represents a reference to a
PersistentVolumeClaim in the same namespace.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              Properties:
                                Claim Name:
                                  Description:  claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  Type:  string
                                Read Only:
                                  Description:  readOnly Will force the ReadOnly setting in VolumeMounts.
Default false.
                                  Type:  boolean
                              Required:
                                claimName
                              Type:  object
                            Photon Persistent Disk:
                              Description:  photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:  string
                                Pd ID:
                                  Description:  pdID is the ID that identifies Photon Controller persistent disk
                                  Type:         string
                              Required:
                                pdID
                              Type:  object
                            Portworx Volume:
                              Description:  portworxVolume represents a portworx volume attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  fSType represents the filesystem type to mount
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:  string
                                Read Only:
                                  Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Volume ID:
                                  Description:  volumeID uniquely identifies a Portworx volume
                                  Type:         string
                              Required:
                                volumeID
                              Type:  object
                            Projected:
                              Description:  projected items for all in one resources secrets, configmaps, and downward API
                              Properties:
                                Default Mode:
                                  Description:  defaultMode are the mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                  Format:  int32
                                  Type:    integer
                                Sources:
                                  Description:  sources is the list of volume projections
                                  Items:
                                    Description:  Projection that may be projected along with other supported volume types
                                    Properties:
                                      Cluster Trust Bundle:
                                        Description:  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
of ClusterTrustBundle objects in an auto-updating file.


Alpha, gated by the ClusterTrustBundleProjection feature gate.


ClusterTrustBundle objects can either be selected by name, or by the
combination of signer name and a label selector.


Kubelet performs aggressive normalization of the PEM contents written
into the pod filesystem.  Esoteric PEM features such as inter-block
comments and block headers are stripped.  Certificates are deduplicated.
The ordering of certificates within the file is arbitrary, and Kubelet
may change the order over time.
                                        Properties:
                                          Label Selector:
                                            Description:  Select all ClusterTrustBundles that match this label selector.  Only has
effect if signerName is set.  Mutually-exclusive with name.  If unset,
interpreted as "match nothing".  If set but empty, interpreted as "match
everything".
                                            Properties:
                                              Match Expressions:
                                                Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                Items:
                                                  Description:  A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
                                                  Properties:
                                                    Key:
                                                      Description:  key is the label key that the selector applies to.
                                                      Type:         string
                                                    Operator:
                                                      Description:  operator represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      Type:  string
                                                    Values:
                                                      Description:  values is an array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. This array is replaced during a strategic
merge patch.
                                                      Items:
                                                        Type:  string
                                                      Type:    array
                                                  Required:
                                                    key
                                                    operator
                                                  Type:  object
                                                Type:    array
                                              Match Labels:
                                                Additional Properties:
                                                  Type:       string
                                                Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
map is equivalent to an element of matchExpressions, whose key field is "key", the
operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                Type:                     object
                                            Type:                         object
                                            X - Kubernetes - Map - Type:  atomic
                                          Name:
                                            Description:  Select a single ClusterTrustBundle by object name.  Mutually-exclusive
with signerName and labelSelector.
                                            Type:  string
                                          Optional:
                                            Description:  If true, don't block pod startup if the referenced ClusterTrustBundle(s)
aren't available.  If using name, then the named ClusterTrustBundle is
allowed not to exist.  If using signerName, then the combination of
signerName and labelSelector is allowed to match zero
ClusterTrustBundles.
                                            Type:  boolean
                                          Path:
                                            Description:  Relative path from the volume root to write the bundle.
                                            Type:         string
                                          Signer Name:
                                            Description:  Select all ClusterTrustBundles that match this signer name.
Mutually-exclusive with name.  The contents of all selected
ClusterTrustBundles will be unified and deduplicated.
                                            Type:  string
                                        Required:
                                          path
                                        Type:  object
                                      Config Map:
                                        Description:  configMap information about the configMap data to project
                                        Properties:
                                          Items:
                                            Description:  items if unspecified, each key-value pair in the Data field of the referenced
ConfigMap will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the ConfigMap,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                            Items:
                                              Description:  Maps a string key to a path within a volume.
                                              Properties:
                                                Key:
                                                  Description:  key is the key to project.
                                                  Type:         string
                                                Mode:
                                                  Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:  int32
                                                  Type:    integer
                                                Path:
                                                  Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                                  Type:  string
                                              Required:
                                                key
                                                path
                                              Type:  object
                                            Type:    array
                                          Name:
                                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                            Type:  string
                                          Optional:
                                            Description:              optional specify whether the ConfigMap or its keys must be defined
                                            Type:                     boolean
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  atomic
                                      Downward API:
                                        Description:  downwardAPI information about the downwardAPI data to project
                                        Properties:
                                          Items:
                                            Description:  Items is a list of DownwardAPIVolume file
                                            Items:
                                              Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                              Properties:
                                                Field Ref:
                                                  Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                                  Properties:
                                                    API Version:
                                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      Type:         string
                                                    Field Path:
                                                      Description:  Path of the field to select in the specified API version.
                                                      Type:         string
                                                  Required:
                                                    fieldPath
                                                  Type:                         object
                                                  X - Kubernetes - Map - Type:  atomic
                                                Mode:
                                                  Description:  Optional: mode bits used to set permissions on this file, must be an octal value
between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:  int32
                                                  Type:    integer
                                                Path:
                                                  Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                                  Type:         string
                                                Resource Field Ref:
                                                  Description:  Selects a resource of the container: only resources limits and requests
(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  Properties:
                                                    Container Name:
                                                      Description:  Container name: required for volumes, optional for env vars
                                                      Type:         string
                                                    Divisor:
                                                      Any Of:
                                                        Type:                              integer
                                                        Type:                              string
                                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      X - Kubernetes - Int - Or - String:  true
                                                    Resource:
                                                      Description:  Required: resource to select
                                                      Type:         string
                                                  Required:
                                                    resource
                                                  Type:                         object
                                                  X - Kubernetes - Map - Type:  atomic
                                              Required:
                                                path
                                              Type:  object
                                            Type:    array
                                        Type:        object
                                      Secret:
                                        Description:  secret information about the secret data to project
                                        Properties:
                                          Items:
                                            Description:  items if unspecified, each key-value pair in the Data field of the referenced
Secret will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the Secret,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                            Items:
                                              Description:  Maps a string key to a path within a volume.
                                              Properties:
                                                Key:
                                                  Description:  key is the key to project.
                                                  Type:         string
                                                Mode:
                                                  Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:  int32
                                                  Type:    integer
                                                Path:
                                                  Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                                  Type:  string
                                              Required:
                                                key
                                                path
                                              Type:  object
                                            Type:    array
                                          Name:
                                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                            Type:  string
                                          Optional:
                                            Description:              optional field specify whether the Secret or its key must be defined
                                            Type:                     boolean
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  atomic
                                      Service Account Token:
                                        Description:  serviceAccountToken is information about the serviceAccountToken data to project
                                        Properties:
                                          Audience:
                                            Description:  audience is the intended audience of the token. A recipient of a token
must identify itself with an identifier specified in the audience of the
token, and otherwise should reject the token. The audience defaults to the
identifier of the apiserver.
                                            Type:  string
                                          Expiration Seconds:
                                            Description:  expirationSeconds is the requested duration of validity of the service
account token. As the token approaches expiration, the kubelet volume
plugin will proactively rotate the service account token. The kubelet will
start trying to rotate the token if the token is older than 80 percent of
its time to live or if the token is older than 24 hours.Defaults to 1 hour
and must be at least 10 minutes.
                                            Format:  int64
                                            Type:    integer
                                          Path:
                                            Description:  path is the path relative to the mount point of the file to project the
token into.
                                            Type:  string
                                        Required:
                                          path
                                        Type:  object
                                    Type:      object
                                  Type:        array
                              Type:            object
                            Quobyte:
                              Description:  quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                              Properties:
                                Group:
                                  Description:  group to map volume access to
Default is no group
                                  Type:  string
                                Read Only:
                                  Description:  readOnly here will force the Quobyte volume to be mounted with read-only permissions.
Defaults to false.
                                  Type:  boolean
                                Registry:
                                  Description:  registry represents a single or multiple Quobyte Registry services
specified as a string as host:port pair (multiple entries are separated with commas)
which acts as the central registry for volumes
                                  Type:  string
                                Tenant:
                                  Description:  tenant owning the given Quobyte volume in the Backend
Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                  Type:  string
                                User:
                                  Description:  user to map volume access to
Defaults to serivceaccount user
                                  Type:  string
                                Volume:
                                  Description:  volume is a string that references an already created Quobyte volume by name.
                                  Type:         string
                              Required:
                                registry
                                volume
                              Type:  object
                            Rbd:
                              Description:  rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
More info: https://examples.k8s.io/volumes/rbd/README.md
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:  string
                                Image:
                                  Description:  image is the rados image name.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:  string
                                Keyring:
                                  Description:  keyring is the path to key ring for RBDUser.
Default is /etc/ceph/keyring.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:  string
                                Monitors:
                                  Description:  monitors is a collection of Ceph monitors.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Items:
                                    Type:  string
                                  Type:    array
                                Pool:
                                  Description:  pool is the rados pool name.
Default is rbd.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:  string
                                Read Only:
                                  Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef is name of the authentication secret for RBDUser. If provided
overrides keyring.
Default is nil.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                User:
                                  Description:  user is the rados user name.
Default is admin.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:  string
                              Required:
                                image
                                monitors
                              Type:  object
                            Scale IO:
                              Description:  scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs".
Default is "xfs".
                                  Type:  string
                                Gateway:
                                  Description:  gateway is the host address of the ScaleIO API Gateway.
                                  Type:         string
                                Protection Domain:
                                  Description:  protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                                  Type:         string
                                Read Only:
                                  Description:  readOnly Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef references to the secret for ScaleIO user and other
sensitive information. If this is not provided, Login operation will fail.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Ssl Enabled:
                                  Description:  sslEnabled Flag enable/disable SSL communication with Gateway, default false
                                  Type:         boolean
                                Storage Mode:
                                  Description:  storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
Default is ThinProvisioned.
                                  Type:  string
                                Storage Pool:
                                  Description:  storagePool is the ScaleIO Storage Pool associated with the protection domain.
                                  Type:         string
                                System:
                                  Description:  system is the name of the storage system as configured in ScaleIO.
                                  Type:         string
                                Volume Name:
                                  Description:  volumeName is the name of a volume already created in the ScaleIO system
that is associated with this volume source.
                                  Type:  string
                              Required:
                                gateway
                                secretRef
                                system
                              Type:  object
                            Secret:
                              Description:  secret represents a secret that should populate this volume.
More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              Properties:
                                Default Mode:
                                  Description:  defaultMode is Optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values
for mode bits. Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                  Format:  int32
                                  Type:    integer
                                Items:
                                  Description:  items If unspecified, each key-value pair in the Data field of the referenced
Secret will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the Secret,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                  Items:
                                    Description:  Maps a string key to a path within a volume.
                                    Properties:
                                      Key:
                                        Description:  key is the key to project.
                                        Type:         string
                                      Mode:
                                        Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                        Format:  int32
                                        Type:    integer
                                      Path:
                                        Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                        Type:  string
                                    Required:
                                      key
                                      path
                                    Type:  object
                                  Type:    array
                                Optional:
                                  Description:  optional field specify whether the Secret or its keys must be defined
                                  Type:         boolean
                                Secret Name:
                                  Description:  secretName is the name of the secret in the pod's namespace to use.
More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  Type:  string
                              Type:      object
                            Storageos:
                              Description:  storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                              Properties:
                                Fs Type:
                                  Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:  string
                                Read Only:
                                  Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                                  Type:  boolean
                                Secret Ref:
                                  Description:  secretRef specifies the secret to use for obtaining the StorageOS API
credentials.  If not specified, default values will be attempted.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:                     string
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Volume Name:
                                  Description:  volumeName is the human-readable name of the StorageOS volume.  Volume
names are only unique within a namespace.
                                  Type:  string
                                Volume Namespace:
                                  Description:  volumeNamespace specifies the scope of the volume within StorageOS.  If no
namespace is specified then the Pod's namespace will be used.  This allows the
Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
Set VolumeName to any name to override the default behaviour.
Set to "default" if you are not using namespaces within StorageOS.
Namespaces that do not pre-exist within StorageOS will be created.
                                  Type:  string
                              Type:      object
                            Vsphere Volume:
                              Description:  vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  fsType is filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:  string
                                Storage Policy ID:
                                  Description:  storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                  Type:         string
                                Storage Policy Name:
                                  Description:  storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                                  Type:         string
                                Volume Path:
                                  Description:  volumePath is the path that identifies vSphere volume vmdk
                                  Type:         string
                              Required:
                                volumePath
                              Type:  object
                          Type:      object
                        Volume Type:
                          Default:      hostPath
                          Description:  VolumeType is the volume type of the tier. Should be one of the three types: `hostPath`, `emptyDir` and `volumeTemplate`.
If not set, defaults to hostPath.
                          Enum:
                            hostPath
                            emptyDir
                          Type:  string
                      Required:
                        mediumtype
                      Type:  object
                    Type:    array
                Type:        object
              Volumes:
                Description:  Volumes is the list of Kubernetes volumes that can be mounted by the alluxio runtime components and/or fuses.
                Items:
                  Description:  Volume represents a named volume in a pod that may be accessed by any container in the pod.
                  Properties:
                    Aws Elastic Block Store:
                      Description:  awsElasticBlockStore represents an AWS Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
TODO: how do we prevent errors in the filesystem from compromising the machine
                          Type:  string
                        Partition:
                          Description:  partition is the partition in the volume that you want to mount.
If omitted, the default is to mount by volume name.
Examples: For volume /dev/sda1, you specify the partition as "1".
Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                          Format:  int32
                          Type:    integer
                        Read Only:
                          Description:  readOnly value true will force the readOnly setting in VolumeMounts.
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          Type:  boolean
                        Volume ID:
                          Description:  volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          Type:  string
                      Required:
                        volumeID
                      Type:  object
                    Azure Disk:
                      Description:  azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                      Properties:
                        Caching Mode:
                          Description:  cachingMode is the Host Caching mode: None, Read Only, Read Write.
                          Type:         string
                        Disk Name:
                          Description:  diskName is the Name of the data disk in the blob storage
                          Type:         string
                        Disk URI:
                          Description:  diskURI is the URI of data disk in the blob storage
                          Type:         string
                        Fs Type:
                          Description:  fsType is Filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          Type:  string
                        Kind:
                          Description:  kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
                          Type:         string
                        Read Only:
                          Description:  readOnly Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                      Required:
                        diskName
                        diskURI
                      Type:  object
                    Azure File:
                      Description:  azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                      Properties:
                        Read Only:
                          Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Secret Name:
                          Description:  secretName is the  name of secret that contains Azure Storage Account Name and Key
                          Type:         string
                        Share Name:
                          Description:  shareName is the azure share Name
                          Type:         string
                      Required:
                        secretName
                        shareName
                      Type:  object
                    Cephfs:
                      Description:  cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                      Properties:
                        Monitors:
                          Description:  monitors is Required: Monitors is a collection of Ceph monitors
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          Items:
                            Type:  string
                          Type:    array
                        Path:
                          Description:  path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                          Type:         string
                        Read Only:
                          Description:  readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          Type:  boolean
                        Secret File:
                          Description:  secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          Type:  string
                        Secret Ref:
                          Description:  secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        User:
                          Description:  user is optional: User is the rados user name, default is admin
More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          Type:  string
                      Required:
                        monitors
                      Type:  object
                    Cinder:
                      Description:  cinder represents a cinder volume attached and mounted on kubelets host machine.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          Type:  string
                        Read Only:
                          Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef is optional: points to a secret object containing parameters used to connect
to OpenStack.
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Volume ID:
                          Description:  volumeID used to identify the volume in cinder.
More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          Type:  string
                      Required:
                        volumeID
                      Type:  object
                    Config Map:
                      Description:  configMap represents a configMap that should populate this volume
                      Properties:
                        Default Mode:
                          Description:  defaultMode is optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                          Format:  int32
                          Type:    integer
                        Items:
                          Description:  items if unspecified, each key-value pair in the Data field of the referenced
ConfigMap will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the ConfigMap,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                          Items:
                            Description:  Maps a string key to a path within a volume.
                            Properties:
                              Key:
                                Description:  key is the key to project.
                                Type:         string
                              Mode:
                                Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                Format:  int32
                                Type:    integer
                              Path:
                                Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                Type:  string
                            Required:
                              key
                              path
                            Type:  object
                          Type:    array
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:  string
                        Optional:
                          Description:              optional specify whether the ConfigMap or its keys must be defined
                          Type:                     boolean
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Csi:
                      Description:  csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                      Properties:
                        Driver:
                          Description:  driver is the name of the CSI driver that handles this volume.
Consult with your admin for the correct name as registered in the cluster.
                          Type:  string
                        Fs Type:
                          Description:  fsType to mount. Ex. "ext4", "xfs", "ntfs".
If not provided, the empty value is passed to the associated CSI driver
which will determine the default filesystem to apply.
                          Type:  string
                        Node Publish Secret Ref:
                          Description:  nodePublishSecretRef is a reference to the secret object containing
sensitive information to pass to the CSI driver to complete the CSI
NodePublishVolume and NodeUnpublishVolume calls.
This field is optional, and  may be empty if no secret is required. If the
secret object contains more than one secret, all secret references are passed.
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Read Only:
                          Description:  readOnly specifies a read-only configuration for the volume.
Defaults to false (read/write).
                          Type:  boolean
                        Volume Attributes:
                          Additional Properties:
                            Type:       string
                          Description:  volumeAttributes stores driver-specific properties that are passed to the CSI
driver. Consult your driver's documentation for supported values.
                          Type:  object
                      Required:
                        driver
                      Type:  object
                    Downward API:
                      Description:  downwardAPI represents downward API about the pod that should populate this volume
                      Properties:
                        Default Mode:
                          Description:  Optional: mode bits to use on created files by default. Must be a
Optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                          Format:  int32
                          Type:    integer
                        Items:
                          Description:  Items is a list of downward API volume file
                          Items:
                            Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                            Properties:
                              Field Ref:
                                Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                Properties:
                                  API Version:
                                    Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    Type:         string
                                  Field Path:
                                    Description:  Path of the field to select in the specified API version.
                                    Type:         string
                                Required:
                                  fieldPath
                                Type:                         object
                                X - Kubernetes - Map - Type:  atomic
                              Mode:
                                Description:  Optional: mode bits used to set permissions on this file, must be an octal value
between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                Format:  int32
                                Type:    integer
                              Path:
                                Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                Type:         string
                              Resource Field Ref:
                                Description:  Selects a resource of the container: only resources limits and requests
(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                Properties:
                                  Container Name:
                                    Description:  Container name: required for volumes, optional for env vars
                                    Type:         string
                                  Divisor:
                                    Any Of:
                                      Type:                              integer
                                      Type:                              string
                                    Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                    Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    X - Kubernetes - Int - Or - String:  true
                                  Resource:
                                    Description:  Required: resource to select
                                    Type:         string
                                Required:
                                  resource
                                Type:                         object
                                X - Kubernetes - Map - Type:  atomic
                            Required:
                              path
                            Type:  object
                          Type:    array
                      Type:        object
                    Empty Dir:
                      Description:  emptyDir represents a temporary directory that shares a pod's lifetime.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                      Properties:
                        Medium:
                          Description:  medium represents what type of storage medium should back this directory.
The default is "" which means to use the node's default medium.
Must be an empty string (default) or Memory.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Type:  string
                        Size Limit:
                          Any Of:
                            Type:       integer
                            Type:       string
                          Description:  sizeLimit is the total amount of local storage required for this EmptyDir volume.
The size limit is also applicable for memory medium.
The maximum usage on memory medium EmptyDir would be the minimum value between
the SizeLimit specified here and the sum of memory limits of all containers in a pod.
The default is nil which means that the limit is undefined.
More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                      Type:                                    object
                    Ephemeral:
                      Description:  ephemeral represents a volume that is handled by a cluster storage driver.
The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
and deleted when the pod is removed.


Use this if:
a) the volume is only needed while the pod runs,
b) features of normal volumes like restoring from snapshot or capacity
   tracking are needed,
c) the storage driver is specified through a storage class, and
d) the storage driver supports dynamic volume provisioning through
   a PersistentVolumeClaim (see EphemeralVolumeSource for more
   information on the connection between this volume type
   and PersistentVolumeClaim).


Use PersistentVolumeClaim or one of the vendor-specific
APIs for volumes that persist for longer than the lifecycle
of an individual pod.


Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
be used that way - see the documentation of the driver for
more information.


A pod can use both types of ephemeral volumes and
persistent volumes at the same time.
                      Properties:
                        Volume Claim Template:
                          Description:  Will be used to create a stand-alone PVC to provision the volume.
The pod in which this EphemeralVolumeSource is embedded will be the
owner of the PVC, i.e. the PVC will be deleted together with the
pod.  The name of the PVC will be `<pod name>-<volume name>` where
`<volume name>` is the name from the `PodSpec.Volumes` array
entry. Pod validation will reject the pod if the concatenated name
is not valid for a PVC (for example, too long).


An existing PVC with that name that is not owned by the pod
will *not* be used for the pod to avoid using an unrelated
volume by mistake. Starting the pod is then blocked until
the unrelated PVC is removed. If such a pre-created PVC is
meant to be used by the pod, the PVC has to updated with an
owner reference to the pod once the pod exists. Normally
this should not be necessary, but it may be useful when
manually reconstructing a broken cluster.


This field is read-only and no changes will be made by Kubernetes
to the PVC after it has been created.


Required, must not be nil.
                          Properties:
                            Metadata:
                              Description:  May contain labels and annotations that will be copied into the PVC
when creating it. No other fields are allowed and will be rejected during
validation.
                              Type:  object
                            Spec:
                              Description:  The specification for the PersistentVolumeClaim. The entire content is
copied unchanged into the PVC that gets created from this
template. The same fields as in a PersistentVolumeClaim
are also valid here.
                              Properties:
                                Access Modes:
                                  Description:  accessModes contains the desired access modes the volume should have.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                  Items:
                                    Type:  string
                                  Type:    array
                                Data Source:
                                  Description:  dataSource field can be used to specify either:
* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
* An existing PVC (PersistentVolumeClaim)
If the provisioner or an external controller can support the specified data source,
it will create a new volume based on the contents of the specified data source.
When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                  Properties:
                                    API Group:
                                      Description:  APIGroup is the group for the resource being referenced.
If APIGroup is not specified, the specified Kind must be in the core API group.
For any other third-party types, APIGroup is required.
                                      Type:  string
                                    Kind:
                                      Description:  Kind is the type of resource being referenced
                                      Type:         string
                                    Name:
                                      Description:  Name is the name of resource being referenced
                                      Type:         string
                                  Required:
                                    kind
                                    name
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Data Source Ref:
                                  Description:  dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
volume is desired. This may be any object from a non-empty API group (non
core object) or a PersistentVolumeClaim object.
When this field is specified, volume binding will only succeed if the type of
the specified object matches some installed volume populator or dynamic
provisioner.
This field will replace the functionality of the dataSource field and as such
if both fields are non-empty, they must have the same value. For backwards
compatibility, when namespace isn't specified in dataSourceRef,
both fields (dataSource and dataSourceRef) will be set to the same
value automatically if one of them is empty and the other is non-empty.
When namespace is specified in dataSourceRef,
dataSource isn't set to the same value and must be empty.
There are three important differences between dataSource and dataSourceRef:
* While dataSource only allows two specific types of objects, dataSourceRef
  allows any non-core object, as well as PersistentVolumeClaim objects.
* While dataSource ignores disallowed values (dropping them), dataSourceRef
  preserves all values, and generates an error if a disallowed value is
  specified.
* While dataSource only allows local objects, dataSourceRef allows objects
  in any namespaces.
(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  Properties:
                                    API Group:
                                      Description:  APIGroup is the group for the resource being referenced.
If APIGroup is not specified, the specified Kind must be in the core API group.
For any other third-party types, APIGroup is required.
                                      Type:  string
                                    Kind:
                                      Description:  Kind is the type of resource being referenced
                                      Type:         string
                                    Name:
                                      Description:  Name is the name of resource being referenced
                                      Type:         string
                                    Namespace:
                                      Description:  Namespace is the namespace of resource being referenced
Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      Type:  string
                                  Required:
                                    kind
                                    name
                                  Type:  object
                                Resources:
                                  Description:  resources represents the minimum resources the volume should have.
If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
that are lower than previous value but must still be higher than capacity recorded in the
status field of the claim.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                  Properties:
                                    Limits:
                                      Additional Properties:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        X - Kubernetes - Int - Or - String:  true
                                      Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      Type:  object
                                    Requests:
                                      Additional Properties:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        X - Kubernetes - Int - Or - String:  true
                                      Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      Type:  object
                                  Type:      object
                                Selector:
                                  Description:  selector is a label query over volumes to consider for binding.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:  string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. This array is replaced during a strategic
merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:       string
                                      Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
map is equivalent to an element of matchExpressions, whose key field is "key", the
operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Storage Class Name:
                                  Description:  storageClassName is the name of the StorageClass required by the claim.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                  Type:  string
                                Volume Attributes Class Name:
                                  Description:  volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
If specified, the CSI driver will create or update the volume with the attributes defined
in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
will be set by the persistentvolume controller if it exists.
If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
exists.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
(Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                  Type:  string
                                Volume Mode:
                                  Description:  volumeMode defines what type of volume is required by the claim.
Value of Filesystem is implied when not included in claim spec.
                                  Type:  string
                                Volume Name:
                                  Description:  volumeName is the binding reference to the PersistentVolume backing this claim.
                                  Type:         string
                              Type:             object
                          Required:
                            spec
                          Type:  object
                      Type:      object
                    Fc:
                      Description:  fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
TODO: how do we prevent errors in the filesystem from compromising the machine
                          Type:  string
                        Lun:
                          Description:  lun is Optional: FC target lun number
                          Format:       int32
                          Type:         integer
                        Read Only:
                          Description:  readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Target WW Ns:
                          Description:  targetWWNs is Optional: FC target worldwide names (WWNs)
                          Items:
                            Type:  string
                          Type:    array
                        Wwids:
                          Description:  wwids Optional: FC volume world wide identifiers (wwids)
Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                          Items:
                            Type:  string
                          Type:    array
                      Type:        object
                    Flex Volume:
                      Description:  flexVolume represents a generic volume resource that is
provisioned/attached using an exec based plugin.
                      Properties:
                        Driver:
                          Description:  driver is the name of the driver to use for this volume.
                          Type:         string
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                          Type:  string
                        Options:
                          Additional Properties:
                            Type:       string
                          Description:  options is Optional: this field holds extra command options if any.
                          Type:         object
                        Read Only:
                          Description:  readOnly is Optional: defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef is Optional: secretRef is reference to the secret object containing
sensitive information to pass to the plugin scripts. This may be
empty if no secret object is specified. If the secret object
contains more than one secret, all secrets are passed to the plugin
scripts.
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                      Required:
                        driver
                      Type:  object
                    Flocker:
                      Description:  flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                      Properties:
                        Dataset Name:
                          Description:  datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
should be considered as deprecated
                          Type:  string
                        Dataset UUID:
                          Description:  datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                          Type:         string
                      Type:             object
                    Gce Persistent Disk:
                      Description:  gcePersistentDisk represents a GCE Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                      Properties:
                        Fs Type:
                          Description:  fsType is filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
TODO: how do we prevent errors in the filesystem from compromising the machine
                          Type:  string
                        Partition:
                          Description:  partition is the partition in the volume that you want to mount.
If omitted, the default is to mount by volume name.
Examples: For volume /dev/sda1, you specify the partition as "1".
Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          Format:  int32
                          Type:    integer
                        Pd Name:
                          Description:  pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          Type:  string
                        Read Only:
                          Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          Type:  boolean
                      Required:
                        pdName
                      Type:  object
                    Git Repo:
                      Description:  gitRepo represents a git repository at a particular revision.
DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
into the Pod's container.
                      Properties:
                        Directory:
                          Description:  directory is the target directory name.
Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
git repository.  Otherwise, if specified, the volume will contain the git repository in
the subdirectory with the given name.
                          Type:  string
                        Repository:
                          Description:  repository is the URL
                          Type:         string
                        Revision:
                          Description:  revision is the commit hash for the specified revision.
                          Type:         string
                      Required:
                        repository
                      Type:  object
                    Glusterfs:
                      Description:  glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
More info: https://examples.k8s.io/volumes/glusterfs/README.md
                      Properties:
                        Endpoints:
                          Description:  endpoints is the endpoint name that details Glusterfs topology.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          Type:  string
                        Path:
                          Description:  path is the Glusterfs volume path.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          Type:  string
                        Read Only:
                          Description:  readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
Defaults to false.
More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          Type:  boolean
                      Required:
                        endpoints
                        path
                      Type:  object
                    Host Path:
                      Description:  hostPath represents a pre-existing file or directory on the host
machine that is directly exposed to the container. This is generally
used for system agents or other privileged things that are allowed
to see the host machine. Most containers will NOT need this.
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
---
TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
mount host directories as read/write.
                      Properties:
                        Path:
                          Description:  path of the directory on the host.
If the path is a symlink, it will follow the link to the real path.
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          Type:  string
                        Type:
                          Description:  type for HostPath Volume
Defaults to ""
More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          Type:  string
                      Required:
                        path
                      Type:  object
                    Iscsi:
                      Description:  iscsi represents an ISCSI Disk resource that is attached to a
kubelet's host machine and then exposed to the pod.
More info: https://examples.k8s.io/volumes/iscsi/README.md
                      Properties:
                        Chap Auth Discovery:
                          Description:  chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                          Type:         boolean
                        Chap Auth Session:
                          Description:  chapAuthSession defines whether support iSCSI Session CHAP authentication
                          Type:         boolean
                        Fs Type:
                          Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
TODO: how do we prevent errors in the filesystem from compromising the machine
                          Type:  string
                        Initiator Name:
                          Description:  initiatorName is the custom iSCSI Initiator Name.
If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
<target portal>:<volume name> will be created for the connection.
                          Type:  string
                        Iqn:
                          Description:  iqn is the target iSCSI Qualified Name.
                          Type:         string
                        Iscsi Interface:
                          Description:  iscsiInterface is the interface Name that uses an iSCSI transport.
Defaults to 'default' (tcp).
                          Type:  string
                        Lun:
                          Description:  lun represents iSCSI Target Lun number.
                          Format:       int32
                          Type:         integer
                        Portals:
                          Description:  portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
is other than default (typically TCP ports 860 and 3260).
                          Items:
                            Type:  string
                          Type:    array
                        Read Only:
                          Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef is the CHAP Secret for iSCSI target and initiator authentication
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Target Portal:
                          Description:  targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
is other than default (typically TCP ports 860 and 3260).
                          Type:  string
                      Required:
                        iqn
                        lun
                        targetPortal
                      Type:  object
                    Name:
                      Description:  name of the volume.
Must be a DNS_LABEL and unique within the pod.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      Type:  string
                    Nfs:
                      Description:  nfs represents an NFS mount on the host that shares a pod's lifetime
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                      Properties:
                        Path:
                          Description:  path that is exported by the NFS server.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          Type:  string
                        Read Only:
                          Description:  readOnly here will force the NFS export to be mounted with read-only permissions.
Defaults to false.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          Type:  boolean
                        Server:
                          Description:  server is the hostname or IP address of the NFS server.
More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          Type:  string
                      Required:
                        path
                        server
                      Type:  object
                    Persistent Volume Claim:
                      Description:  persistentVolumeClaimVolumeSource represents a reference to a
PersistentVolumeClaim in the same namespace.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      Properties:
                        Claim Name:
                          Description:  claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          Type:  string
                        Read Only:
                          Description:  readOnly Will force the ReadOnly setting in VolumeMounts.
Default false.
                          Type:  boolean
                      Required:
                        claimName
                      Type:  object
                    Photon Persistent Disk:
                      Description:  photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          Type:  string
                        Pd ID:
                          Description:  pdID is the ID that identifies Photon Controller persistent disk
                          Type:         string
                      Required:
                        pdID
                      Type:  object
                    Portworx Volume:
                      Description:  portworxVolume represents a portworx volume attached and mounted on kubelets host machine
                      Properties:
                        Fs Type:
                          Description:  fSType represents the filesystem type to mount
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                          Type:  string
                        Read Only:
                          Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Volume ID:
                          Description:  volumeID uniquely identifies a Portworx volume
                          Type:         string
                      Required:
                        volumeID
                      Type:  object
                    Projected:
                      Description:  projected items for all in one resources secrets, configmaps, and downward API
                      Properties:
                        Default Mode:
                          Description:  defaultMode are the mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                          Format:  int32
                          Type:    integer
                        Sources:
                          Description:  sources is the list of volume projections
                          Items:
                            Description:  Projection that may be projected along with other supported volume types
                            Properties:
                              Cluster Trust Bundle:
                                Description:  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
of ClusterTrustBundle objects in an auto-updating file.


Alpha, gated by the ClusterTrustBundleProjection feature gate.


ClusterTrustBundle objects can either be selected by name, or by the
combination of signer name and a label selector.


Kubelet performs aggressive normalization of the PEM contents written
into the pod filesystem.  Esoteric PEM features such as inter-block
comments and block headers are stripped.  Certificates are deduplicated.
The ordering of certificates within the file is arbitrary, and Kubelet
may change the order over time.
                                Properties:
                                  Label Selector:
                                    Description:  Select all ClusterTrustBundles that match this label selector.  Only has
effect if signerName is set.  Mutually-exclusive with name.  If unset,
interpreted as "match nothing".  If set but empty, interpreted as "match
everything".
                                    Properties:
                                      Match Expressions:
                                        Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        Items:
                                          Description:  A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
                                          Properties:
                                            Key:
                                              Description:  key is the label key that the selector applies to.
                                              Type:         string
                                            Operator:
                                              Description:  operator represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists and DoesNotExist.
                                              Type:  string
                                            Values:
                                              Description:  values is an array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. This array is replaced during a strategic
merge patch.
                                              Items:
                                                Type:  string
                                              Type:    array
                                          Required:
                                            key
                                            operator
                                          Type:  object
                                        Type:    array
                                      Match Labels:
                                        Additional Properties:
                                          Type:       string
                                        Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
map is equivalent to an element of matchExpressions, whose key field is "key", the
operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        Type:                     object
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Name:
                                    Description:  Select a single ClusterTrustBundle by object name.  Mutually-exclusive
with signerName and labelSelector.
                                    Type:  string
                                  Optional:
                                    Description:  If true, don't block pod startup if the referenced ClusterTrustBundle(s)
aren't available.  If using name, then the named ClusterTrustBundle is
allowed not to exist.  If using signerName, then the combination of
signerName and labelSelector is allowed to match zero
ClusterTrustBundles.
                                    Type:  boolean
                                  Path:
                                    Description:  Relative path from the volume root to write the bundle.
                                    Type:         string
                                  Signer Name:
                                    Description:  Select all ClusterTrustBundles that match this signer name.
Mutually-exclusive with name.  The contents of all selected
ClusterTrustBundles will be unified and deduplicated.
                                    Type:  string
                                Required:
                                  path
                                Type:  object
                              Config Map:
                                Description:  configMap information about the configMap data to project
                                Properties:
                                  Items:
                                    Description:  items if unspecified, each key-value pair in the Data field of the referenced
ConfigMap will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the ConfigMap,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                    Items:
                                      Description:  Maps a string key to a path within a volume.
                                      Properties:
                                        Key:
                                          Description:  key is the key to project.
                                          Type:         string
                                        Mode:
                                          Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                          Format:  int32
                                          Type:    integer
                                        Path:
                                          Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                          Type:  string
                                      Required:
                                        key
                                        path
                                      Type:  object
                                    Type:    array
                                  Name:
                                    Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                    Type:  string
                                  Optional:
                                    Description:              optional specify whether the ConfigMap or its keys must be defined
                                    Type:                     boolean
                                Type:                         object
                                X - Kubernetes - Map - Type:  atomic
                              Downward API:
                                Description:  downwardAPI information about the downwardAPI data to project
                                Properties:
                                  Items:
                                    Description:  Items is a list of DownwardAPIVolume file
                                    Items:
                                      Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                      Properties:
                                        Field Ref:
                                          Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                          Properties:
                                            API Version:
                                              Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              Type:         string
                                            Field Path:
                                              Description:  Path of the field to select in the specified API version.
                                              Type:         string
                                          Required:
                                            fieldPath
                                          Type:                         object
                                          X - Kubernetes - Map - Type:  atomic
                                        Mode:
                                          Description:  Optional: mode bits used to set permissions on this file, must be an octal value
between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                          Format:  int32
                                          Type:    integer
                                        Path:
                                          Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                          Type:         string
                                        Resource Field Ref:
                                          Description:  Selects a resource of the container: only resources limits and requests
(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                          Properties:
                                            Container Name:
                                              Description:  Container name: required for volumes, optional for env vars
                                              Type:         string
                                            Divisor:
                                              Any Of:
                                                Type:                              integer
                                                Type:                              string
                                              Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              X - Kubernetes - Int - Or - String:  true
                                            Resource:
                                              Description:  Required: resource to select
                                              Type:         string
                                          Required:
                                            resource
                                          Type:                         object
                                          X - Kubernetes - Map - Type:  atomic
                                      Required:
                                        path
                                      Type:  object
                                    Type:    array
                                Type:        object
                              Secret:
                                Description:  secret information about the secret data to project
                                Properties:
                                  Items:
                                    Description:  items if unspecified, each key-value pair in the Data field of the referenced
Secret will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the Secret,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                                    Items:
                                      Description:  Maps a string key to a path within a volume.
                                      Properties:
                                        Key:
                                          Description:  key is the key to project.
                                          Type:         string
                                        Mode:
                                          Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                          Format:  int32
                                          Type:    integer
                                        Path:
                                          Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                          Type:  string
                                      Required:
                                        key
                                        path
                                      Type:  object
                                    Type:    array
                                  Name:
                                    Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                                    Type:  string
                                  Optional:
                                    Description:              optional field specify whether the Secret or its key must be defined
                                    Type:                     boolean
                                Type:                         object
                                X - Kubernetes - Map - Type:  atomic
                              Service Account Token:
                                Description:  serviceAccountToken is information about the serviceAccountToken data to project
                                Properties:
                                  Audience:
                                    Description:  audience is the intended audience of the token. A recipient of a token
must identify itself with an identifier specified in the audience of the
token, and otherwise should reject the token. The audience defaults to the
identifier of the apiserver.
                                    Type:  string
                                  Expiration Seconds:
                                    Description:  expirationSeconds is the requested duration of validity of the service
account token. As the token approaches expiration, the kubelet volume
plugin will proactively rotate the service account token. The kubelet will
start trying to rotate the token if the token is older than 80 percent of
its time to live or if the token is older than 24 hours.Defaults to 1 hour
and must be at least 10 minutes.
                                    Format:  int64
                                    Type:    integer
                                  Path:
                                    Description:  path is the path relative to the mount point of the file to project the
token into.
                                    Type:  string
                                Required:
                                  path
                                Type:  object
                            Type:      object
                          Type:        array
                      Type:            object
                    Quobyte:
                      Description:  quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                      Properties:
                        Group:
                          Description:  group to map volume access to
Default is no group
                          Type:  string
                        Read Only:
                          Description:  readOnly here will force the Quobyte volume to be mounted with read-only permissions.
Defaults to false.
                          Type:  boolean
                        Registry:
                          Description:  registry represents a single or multiple Quobyte Registry services
specified as a string as host:port pair (multiple entries are separated with commas)
which acts as the central registry for volumes
                          Type:  string
                        Tenant:
                          Description:  tenant owning the given Quobyte volume in the Backend
Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                          Type:  string
                        User:
                          Description:  user to map volume access to
Defaults to serivceaccount user
                          Type:  string
                        Volume:
                          Description:  volume is a string that references an already created Quobyte volume by name.
                          Type:         string
                      Required:
                        registry
                        volume
                      Type:  object
                    Rbd:
                      Description:  rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
More info: https://examples.k8s.io/volumes/rbd/README.md
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type of the volume that you want to mount.
Tip: Ensure that the filesystem type is supported by the host operating system.
Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
TODO: how do we prevent errors in the filesystem from compromising the machine
                          Type:  string
                        Image:
                          Description:  image is the rados image name.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Type:  string
                        Keyring:
                          Description:  keyring is the path to key ring for RBDUser.
Default is /etc/ceph/keyring.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Type:  string
                        Monitors:
                          Description:  monitors is a collection of Ceph monitors.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Items:
                            Type:  string
                          Type:    array
                        Pool:
                          Description:  pool is the rados pool name.
Default is rbd.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Type:  string
                        Read Only:
                          Description:  readOnly here will force the ReadOnly setting in VolumeMounts.
Defaults to false.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef is name of the authentication secret for RBDUser. If provided
overrides keyring.
Default is nil.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        User:
                          Description:  user is the rados user name.
Default is admin.
More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          Type:  string
                      Required:
                        image
                        monitors
                      Type:  object
                    Scale IO:
                      Description:  scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs".
Default is "xfs".
                          Type:  string
                        Gateway:
                          Description:  gateway is the host address of the ScaleIO API Gateway.
                          Type:         string
                        Protection Domain:
                          Description:  protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                          Type:         string
                        Read Only:
                          Description:  readOnly Defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef references to the secret for ScaleIO user and other
sensitive information. If this is not provided, Login operation will fail.
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Ssl Enabled:
                          Description:  sslEnabled Flag enable/disable SSL communication with Gateway, default false
                          Type:         boolean
                        Storage Mode:
                          Description:  storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
Default is ThinProvisioned.
                          Type:  string
                        Storage Pool:
                          Description:  storagePool is the ScaleIO Storage Pool associated with the protection domain.
                          Type:         string
                        System:
                          Description:  system is the name of the storage system as configured in ScaleIO.
                          Type:         string
                        Volume Name:
                          Description:  volumeName is the name of a volume already created in the ScaleIO system
that is associated with this volume source.
                          Type:  string
                      Required:
                        gateway
                        secretRef
                        system
                      Type:  object
                    Secret:
                      Description:  secret represents a secret that should populate this volume.
More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                      Properties:
                        Default Mode:
                          Description:  defaultMode is Optional: mode bits used to set permissions on created files by default.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values
for mode bits. Defaults to 0644.
Directories within the path are not affected by this setting.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                          Format:  int32
                          Type:    integer
                        Items:
                          Description:  items If unspecified, each key-value pair in the Data field of the referenced
Secret will be projected into the volume as a file whose name is the
key and content is the value. If specified, the listed keys will be
projected into the specified paths, and unlisted keys will not be
present. If a key is specified which is not present in the Secret,
the volume setup will error unless it is marked optional. Paths must be
relative and may not contain the '..' path or start with '..'.
                          Items:
                            Description:  Maps a string key to a path within a volume.
                            Properties:
                              Key:
                                Description:  key is the key to project.
                                Type:         string
                              Mode:
                                Description:  mode is Optional: mode bits used to set permissions on this file.
Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
If not specified, the volume defaultMode will be used.
This might be in conflict with other options that affect the file
mode, like fsGroup, and the result can be other mode bits set.
                                Format:  int32
                                Type:    integer
                              Path:
                                Description:  path is the relative path of the file to map the key to.
May not be an absolute path.
May not contain the path element '..'.
May not start with the string '..'.
                                Type:  string
                            Required:
                              key
                              path
                            Type:  object
                          Type:    array
                        Optional:
                          Description:  optional field specify whether the Secret or its keys must be defined
                          Type:         boolean
                        Secret Name:
                          Description:  secretName is the name of the secret in the pod's namespace to use.
More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          Type:  string
                      Type:      object
                    Storageos:
                      Description:  storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                      Properties:
                        Fs Type:
                          Description:  fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          Type:  string
                        Read Only:
                          Description:  readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
                          Type:  boolean
                        Secret Ref:
                          Description:  secretRef specifies the secret to use for obtaining the StorageOS API
credentials.  If not specified, default values will be attempted.
                          Properties:
                            Name:
                              Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:                     string
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Volume Name:
                          Description:  volumeName is the human-readable name of the StorageOS volume.  Volume
names are only unique within a namespace.
                          Type:  string
                        Volume Namespace:
                          Description:  volumeNamespace specifies the scope of the volume within StorageOS.  If no
namespace is specified then the Pod's namespace will be used.  This allows the
Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
Set VolumeName to any name to override the default behaviour.
Set to "default" if you are not using namespaces within StorageOS.
Namespaces that do not pre-exist within StorageOS will be created.
                          Type:  string
                      Type:      object
                    Vsphere Volume:
                      Description:  vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                      Properties:
                        Fs Type:
                          Description:  fsType is filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          Type:  string
                        Storage Policy ID:
                          Description:  storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                          Type:         string
                        Storage Policy Name:
                          Description:  storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                          Type:         string
                        Volume Path:
                          Description:  volumePath is the path that identifies vSphere volume vmdk
                          Type:         string
                      Required:
                        volumePath
                      Type:  object
                  Required:
                    name
                  Type:  object
                Type:    array
              Worker:
                Description:  The component spec of Alluxio worker
                Properties:
                  Enabled:
                    Description:  Enabled or Disabled for the components. For now, only  API Gateway is enabled or disabled.
                    Type:         boolean
                  Env:
                    Additional Properties:
                      Type:       string
                    Description:  Environment variables that will be used by Alluxio component. <br>
                    Type:         object
                  Image Pull Secrets:
                    Description:  ImagePullSecrets that will be used to pull images
                    Items:
                      Description:  LocalObjectReference contains enough information to let you locate the
referenced object inside the same namespace.
                      Properties:
                        Name:
                          Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                          Type:                     string
                      Type:                         object
                      X - Kubernetes - Map - Type:  atomic
                    Type:                           array
                  Jvm Options:
                    Description:  Options for JVM
                    Items:
                      Type:  string
                    Type:    array
                  Network Mode:
                    Description:  Whether to use hostnetwork or not
                    Enum:
                      HostNetwork
                      
                      ContainerNetwork
                    Type:  string
                  Node Selector:
                    Additional Properties:
                      Type:       string
                    Description:  NodeSelector is a selector which must be true for the master to fit on a node
                    Type:         object
                  Pod Metadata:
                    Description:  PodMetadata defines labels and annotations that will be propagated to Alluxio's pods
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:       string
                        Description:  Annotations are annotations of pod specification
                        Type:         object
                      Labels:
                        Additional Properties:
                          Type:       string
                        Description:  Labels are labels of pod specification
                        Type:         object
                    Type:             object
                  Ports:
                    Additional Properties:
                      Type:       integer
                    Description:  Ports used by Alluxio(e.g. rpc: 19998 for master)
                    Type:         object
                  Properties:
                    Additional Properties:
                      Type:       string
                    Description:  Configurable properties for the Alluxio component. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Alluxio Configuration Properties</a> for more info
                    Type:  object
                  Replicas:
                    Description:  Replicas is the desired number of replicas of the given template.
If unspecified, defaults to 1.
replicas is the min replicas of dataset in the cluster
                    Format:   int32
                    Minimum:  1
                    Type:     integer
                  Resources:
                    Description:  Resources that will be requested by the Alluxio component. <br>
<br>
Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
already allocated to the pod.
                    Properties:
                      Claims:
                        Description:  Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.


This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.


This field is immutable. It can only be set for containers.
                        Items:
                          Description:  ResourceClaim references one entry in PodSpec.ResourceClaims.
                          Properties:
                            Name:
                              Description:  Name must match the name of one entry in pod.spec.resourceClaims of
the Pod where this field is used. It makes that resource available
inside a container.
                              Type:  string
                          Required:
                            name
                          Type:  object
                        Type:    array
                        X - Kubernetes - List - Map - Keys:
                          name
                        X - Kubernetes - List - Type:  map
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required.
If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
otherwise to an implementation-defined value. Requests cannot exceed Limits.
More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:  object
                    Type:      object
                  Volume Mounts:
                    Description:  VolumeMounts specifies the volumes listed in ".spec.volumes" to mount into the alluxio runtime component's filesystem.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must
not contain ':'.
                          Type:  string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host
to container and the other way around.
When not set, MountPropagationNone is used.
This field is beta in 1.10.
                          Type:  string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified).
Defaults to false.
                          Type:  boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted.
Defaults to "" (volume's root).
                          Type:  string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted.
Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
Defaults to "" (volume's root).
SubPathExpr and SubPath are mutually exclusive.
                          Type:  string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                Type:        object
            Type:            object
          Status:
            Description:  RuntimeStatus defines the observed state of Runtime
            Properties:
              API Gateway:
                Description:  APIGatewayStatus represents rest api gateway status
                Properties:
                  Endpoint:
                    Description:  Endpoint for accessing
                    Type:         string
                Type:             object
              Cache Affinity:
                Description:  CacheAffinity represents the runtime worker pods node affinity including node selector
                Properties:
                  Preferred During Scheduling Ignored During Execution:
                    Description:  The scheduler will prefer to schedule pods to nodes that satisfy
the affinity expressions specified by this field, but it may choose
a node that violates one or more of the expressions. The node that is
most preferred is the one with the greatest sum of weights, i.e.
for each node that meets all of the scheduling requirements (resource
request, requiredDuringScheduling affinity expressions, etc.),
compute a sum by iterating through the elements of this field and adding
"weight" to the sum if the node matches the corresponding matchExpressions; the
node(s) with the highest sum are the most preferred.
                    Items:
                      Description:  An empty preferred scheduling term matches all objects with implicit weight 0
(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                      Properties:
                        Preference:
                          Description:  A node selector term, associated with the corresponding weight.
                          Properties:
                            Match Expressions:
                              Description:  A list of node selector requirements by node's labels.
                              Items:
                                Description:  A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  The label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  Represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    Type:  string
                                  Values:
                                    Description:  An array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. If the operator is Gt or Lt, the values
array must have a single element, which will be interpreted as an integer.
This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:  object
                              Type:    array
                            Match Fields:
                              Description:  A list of node selector requirements by node's fields.
                              Items:
                                Description:  A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  The label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  Represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    Type:  string
                                  Values:
                                    Description:  An array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. If the operator is Gt or Lt, the values
array must have a single element, which will be interpreted as an integer.
This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:                   object
                              Type:                     array
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Weight:
                          Description:  Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                          Format:       int32
                          Type:         integer
                      Required:
                        preference
                        weight
                      Type:  object
                    Type:    array
                  Required During Scheduling Ignored During Execution:
                    Description:  If the affinity requirements specified by this field are not met at
scheduling time, the pod will not be scheduled onto the node.
If the affinity requirements specified by this field cease to be met
at some point during pod execution (e.g. due to an update), the system
may or may not try to eventually evict the pod from its node.
                    Properties:
                      Node Selector Terms:
                        Description:  Required. A list of node selector terms. The terms are ORed.
                        Items:
                          Description:  A null or empty node selector term matches no objects. The requirements of
them are ANDed.
The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                          Properties:
                            Match Expressions:
                              Description:  A list of node selector requirements by node's labels.
                              Items:
                                Description:  A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  The label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  Represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    Type:  string
                                  Values:
                                    Description:  An array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. If the operator is Gt or Lt, the values
array must have a single element, which will be interpreted as an integer.
This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:  object
                              Type:    array
                            Match Fields:
                              Description:  A list of node selector requirements by node's fields.
                              Items:
                                Description:  A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  The label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  Represents a key's relationship to a set of values.
Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    Type:  string
                                  Values:
                                    Description:  An array of string values. If the operator is In or NotIn,
the values array must be non-empty. If the operator is Exists or DoesNotExist,
the values array must be empty. If the operator is Gt or Lt, the values
array must have a single element, which will be interpreted as an integer.
This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:                   object
                              Type:                     array
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Type:                           array
                    Required:
                      nodeSelectorTerms
                    Type:                         object
                    X - Kubernetes - Map - Type:  atomic
                Type:                             object
              Cache States:
                Additional Properties:
                  Type:       string
                Description:  CacheStatus represents the total resources of the dataset.
                Type:         object
              Conditions:
                Description:  Represents the latest available observations of a ddc runtime's current state.
                Items:
                  Description:  Condition describes the state of the cache at a certain point.
                  Properties:
                    Last Probe Time:
                      Description:  The last time this condition was updated.
                      Format:       date-time
                      Type:         string
                    Last Transition Time:
                      Description:  Last time the condition transitioned from one status to another.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  A human readable message indicating details about the transition.
                      Type:         string
                    Reason:
                      Description:  The reason for the condition's last transition.
                      Type:         string
                    Status:
                      Description:  Status of the condition, one of True, False, Unknown.
                      Type:         string
                    Type:
                      Description:  Type of cache condition.
                      Type:         string
                  Required:
                    status
                    type
                  Type:  object
                Type:    array
              Current Fuse Number Scheduled:
                Description:  The total number of nodes that can be running the runtime Fuse
pod (including nodes correctly running the runtime Fuse pod).
                Format:  int32
                Type:    integer
              Current Master Number Scheduled:
                Description:  The total number of nodes that should be running the runtime
pod (including nodes correctly running the runtime master pod).
                Format:  int32
                Type:    integer
              Current Worker Number Scheduled:
                Description:  The total number of nodes that can be running the runtime worker
pod (including nodes correctly running the runtime worker pod).
                Format:  int32
                Type:    integer
              Desired Fuse Number Scheduled:
                Description:  The total number of nodes that should be running the runtime Fuse
pod (including nodes correctly running the runtime Fuse pod).
                Format:  int32
                Type:    integer
              Desired Master Number Scheduled:
                Description:  The total number of nodes that should be running the runtime
pod (including nodes correctly running the runtime master pod).
                Format:  int32
                Type:    integer
              Desired Worker Number Scheduled:
                Description:  The total number of nodes that should be running the runtime worker
pod (including nodes correctly running the runtime worker pod).
                Format:  int32
                Type:    integer
              Fuse Number Available:
                Description:  The number of nodes that should be running the
runtime Fuse pod and have one or more of the runtime Fuse pod running and
available (ready for at least spec.minReadySeconds)
                Format:  int32
                Type:    integer
              Fuse Number Ready:
                Description:  The number of nodes that should be running the runtime Fuse pod and have one
or more of the runtime Fuse pod running and ready.
                Format:  int32
                Type:    integer
              Fuse Number Unavailable:
                Description:  The number of nodes that should be running the
runtime fuse pod and have none of the runtime fuse pod running and available
(ready for at least spec.minReadySeconds)
                Format:  int32
                Type:    integer
              Fuse Phase:
                Description:  FusePhase is the Fuse running phase
                Type:         string
              Fuse Reason:
                Description:  Reason for the condition's last transition.
                Type:         string
              Master Number Ready:
                Description:  The number of nodes that should be running the runtime worker pod and have zero
or more of the runtime master pod running and ready.
                Format:  int32
                Type:    integer
              Master Phase:
                Description:  MasterPhase is the master running phase
                Type:         string
              Master Reason:
                Description:  Reason for Master's condition transition
                Type:         string
              Mount Time:
                Description:  MountTime represents time last mount happened
if Mounttime is earlier than master starting time, remount will be required
                Format:  date-time
                Type:    string
              Mounts:
                Description:  MountPoints represents the mount points specified in the bounded dataset
                Items:
                  Description:  Mount describes a mounting. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/ufs/S3.html">Alluxio Storage Integrations</a> for more info
                  Properties:
                    Encrypt Options:
                      Description:  The secret information
                      Items:
                        Properties:
                          Name:
                            Description:  The name of encryptOption
                            Type:         string
                          Value From:
                            Description:  The valueFrom of encryptOption
                            Properties:
                              Secret Key Ref:
                                Description:  The encryptInfo obtained from secret
                                Properties:
                                  Key:
                                    Description:  The required key in the secret
                                    Type:         string
                                  Name:
                                    Description:  The name of required secret
                                    Type:         string
                                Required:
                                  name
                                Type:  object
                            Type:      object
                        Required:
                          name
                        Type:  object
                      Type:    array
                    Mount Point:
                      Description:  MountPoint is the mount point of source.
                      Min Length:   5
                      Type:         string
                    Name:
                      Description:  The name of mount
                      Min Length:   0
                      Type:         string
                    Options:
                      Additional Properties:
                        Type:       string
                      Description:  The Mount Options. <br>
Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Mount Options</a>.  <br>
The option has Prefix 'fs.' And you can Learn more from
<a href="https://docs.alluxio.io/os/user/stable/en/ufs/S3.html">The Storage Integrations</a>
                      Type:  object
                    Path:
                      Description:  The path of mount, if not set will be /{Name}
                      Type:         string
                    Read Only:
                      Description:  Optional: Defaults to false (read-write).
                      Type:         boolean
                    Shared:
                      Description:  Optional: Defaults to false (shared).
                      Type:         boolean
                  Required:
                    mountPoint
                  Type:  object
                Type:    array
              Selector:
                Description:  Selector is used for auto-scaling
                Type:         string
              Setup Duration:
                Description:  Duration tell user how much time was spent to setup the runtime
                Type:         string
              Value File:
                Description:  config map used to set configurations
                Type:         string
              Worker Number Available:
                Description:  The number of nodes that should be running the
runtime worker pod and have one or more of the runtime worker pod running and
available (ready for at least spec.minReadySeconds)
                Format:  int32
                Type:    integer
              Worker Number Ready:
                Description:  The number of nodes that should be running the runtime worker pod and have one
or more of the runtime worker pod running and ready.
                Format:  int32
                Type:    integer
              Worker Number Unavailable:
                Description:  The number of nodes that should be running the
runtime worker pod and have none of the runtime worker pod running and available
(ready for at least spec.minReadySeconds)
                Format:  int32
                Type:    integer
              Worker Phase:
                Description:  WorkerPhase is the worker running phase
                Type:         string
              Worker Reason:
                Description:  Reason for Worker's condition transition
                Type:         string
            Required:
              currentFuseNumberScheduled
              currentMasterNumberScheduled
              currentWorkerNumberScheduled
              desiredFuseNumberScheduled
              desiredMasterNumberScheduled
              desiredWorkerNumberScheduled
              fuseNumberReady
              fusePhase
              masterNumberReady
              masterPhase
              valueFile
              workerNumberReady
              workerPhase
            Type:  object
        Type:      object
    Served:        true
    Storage:       true
    Subresources:
      Scale:
        Label Selector Path:   .status.selector
        Spec Replicas Path:    .spec.replicas
        Status Replicas Path:  .status.currentWorkerNumberScheduled
      Status:
Status:
  Accepted Names:
    Categories:
      fluid
    Kind:       AlluxioRuntime
    List Kind:  AlluxioRuntimeList
    Plural:     alluxioruntimes
    Short Names:
      alluxio
    Singular:  alluxioruntime
  Conditions:
    Last Transition Time:  2024-10-21T10:54:01Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2024-10-21T10:54:01Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1alpha1
Events:  <none>
