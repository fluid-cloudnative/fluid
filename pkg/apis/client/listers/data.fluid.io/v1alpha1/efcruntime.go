/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fluid-cloudnative/fluid/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EFCRuntimeLister helps list EFCRuntimes.
// All objects returned here must be treated as read-only.
type EFCRuntimeLister interface {
	// List lists all EFCRuntimes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EFCRuntime, err error)
	// EFCRuntimes returns an object that can list and get EFCRuntimes.
	EFCRuntimes(namespace string) EFCRuntimeNamespaceLister
	EFCRuntimeListerExpansion
}

// eFCRuntimeLister implements the EFCRuntimeLister interface.
type eFCRuntimeLister struct {
	indexer cache.Indexer
}

// NewEFCRuntimeLister returns a new EFCRuntimeLister.
func NewEFCRuntimeLister(indexer cache.Indexer) EFCRuntimeLister {
	return &eFCRuntimeLister{indexer: indexer}
}

// List lists all EFCRuntimes in the indexer.
func (s *eFCRuntimeLister) List(selector labels.Selector) (ret []*v1alpha1.EFCRuntime, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EFCRuntime))
	})
	return ret, err
}

// EFCRuntimes returns an object that can list and get EFCRuntimes.
func (s *eFCRuntimeLister) EFCRuntimes(namespace string) EFCRuntimeNamespaceLister {
	return eFCRuntimeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EFCRuntimeNamespaceLister helps list and get EFCRuntimes.
// All objects returned here must be treated as read-only.
type EFCRuntimeNamespaceLister interface {
	// List lists all EFCRuntimes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EFCRuntime, err error)
	// Get retrieves the EFCRuntime from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EFCRuntime, error)
	EFCRuntimeNamespaceListerExpansion
}

// eFCRuntimeNamespaceLister implements the EFCRuntimeNamespaceLister
// interface.
type eFCRuntimeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EFCRuntimes in the indexer for a given namespace.
func (s eFCRuntimeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EFCRuntime, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EFCRuntime))
	})
	return ret, err
}

// Get retrieves the EFCRuntime from the indexer for a given namespace and name.
func (s eFCRuntimeNamespaceLister) Get(name string) (*v1alpha1.EFCRuntime, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("efcruntime"), name)
	}
	return obj.(*v1alpha1.EFCRuntime), nil
}
