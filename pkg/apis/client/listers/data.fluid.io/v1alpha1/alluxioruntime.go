/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fluid-cloudnative/fluid/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AlluxioRuntimeLister helps list AlluxioRuntimes.
// All objects returned here must be treated as read-only.
type AlluxioRuntimeLister interface {
	// List lists all AlluxioRuntimes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlluxioRuntime, err error)
	// AlluxioRuntimes returns an object that can list and get AlluxioRuntimes.
	AlluxioRuntimes(namespace string) AlluxioRuntimeNamespaceLister
	AlluxioRuntimeListerExpansion
}

// alluxioRuntimeLister implements the AlluxioRuntimeLister interface.
type alluxioRuntimeLister struct {
	indexer cache.Indexer
}

// NewAlluxioRuntimeLister returns a new AlluxioRuntimeLister.
func NewAlluxioRuntimeLister(indexer cache.Indexer) AlluxioRuntimeLister {
	return &alluxioRuntimeLister{indexer: indexer}
}

// List lists all AlluxioRuntimes in the indexer.
func (s *alluxioRuntimeLister) List(selector labels.Selector) (ret []*v1alpha1.AlluxioRuntime, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlluxioRuntime))
	})
	return ret, err
}

// AlluxioRuntimes returns an object that can list and get AlluxioRuntimes.
func (s *alluxioRuntimeLister) AlluxioRuntimes(namespace string) AlluxioRuntimeNamespaceLister {
	return alluxioRuntimeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AlluxioRuntimeNamespaceLister helps list and get AlluxioRuntimes.
// All objects returned here must be treated as read-only.
type AlluxioRuntimeNamespaceLister interface {
	// List lists all AlluxioRuntimes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlluxioRuntime, err error)
	// Get retrieves the AlluxioRuntime from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AlluxioRuntime, error)
	AlluxioRuntimeNamespaceListerExpansion
}

// alluxioRuntimeNamespaceLister implements the AlluxioRuntimeNamespaceLister
// interface.
type alluxioRuntimeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AlluxioRuntimes in the indexer for a given namespace.
func (s alluxioRuntimeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AlluxioRuntime, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlluxioRuntime))
	})
	return ret, err
}

// Get retrieves the AlluxioRuntime from the indexer for a given namespace and name.
func (s alluxioRuntimeNamespaceLister) Get(name string) (*v1alpha1.AlluxioRuntime, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("alluxioruntime"), name)
	}
	return obj.(*v1alpha1.AlluxioRuntime), nil
}
