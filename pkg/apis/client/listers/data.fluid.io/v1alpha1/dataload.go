/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fluid-cloudnative/fluid/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataLoadLister helps list DataLoads.
// All objects returned here must be treated as read-only.
type DataLoadLister interface {
	// List lists all DataLoads in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataLoad, err error)
	// DataLoads returns an object that can list and get DataLoads.
	DataLoads(namespace string) DataLoadNamespaceLister
	DataLoadListerExpansion
}

// dataLoadLister implements the DataLoadLister interface.
type dataLoadLister struct {
	indexer cache.Indexer
}

// NewDataLoadLister returns a new DataLoadLister.
func NewDataLoadLister(indexer cache.Indexer) DataLoadLister {
	return &dataLoadLister{indexer: indexer}
}

// List lists all DataLoads in the indexer.
func (s *dataLoadLister) List(selector labels.Selector) (ret []*v1alpha1.DataLoad, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataLoad))
	})
	return ret, err
}

// DataLoads returns an object that can list and get DataLoads.
func (s *dataLoadLister) DataLoads(namespace string) DataLoadNamespaceLister {
	return dataLoadNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataLoadNamespaceLister helps list and get DataLoads.
// All objects returned here must be treated as read-only.
type DataLoadNamespaceLister interface {
	// List lists all DataLoads in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataLoad, err error)
	// Get retrieves the DataLoad from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DataLoad, error)
	DataLoadNamespaceListerExpansion
}

// dataLoadNamespaceLister implements the DataLoadNamespaceLister
// interface.
type dataLoadNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataLoads in the indexer for a given namespace.
func (s dataLoadNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataLoad, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataLoad))
	})
	return ret, err
}

// Get retrieves the DataLoad from the indexer for a given namespace and name.
func (s dataLoadNamespaceLister) Get(name string) (*v1alpha1.DataLoad, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataload"), name)
	}
	return obj.(*v1alpha1.DataLoad), nil
}
