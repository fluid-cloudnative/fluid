/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fluid-cloudnative/fluid/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GooseFSRuntimeLister helps list GooseFSRuntimes.
// All objects returned here must be treated as read-only.
type GooseFSRuntimeLister interface {
	// List lists all GooseFSRuntimes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GooseFSRuntime, err error)
	// GooseFSRuntimes returns an object that can list and get GooseFSRuntimes.
	GooseFSRuntimes(namespace string) GooseFSRuntimeNamespaceLister
	GooseFSRuntimeListerExpansion
}

// gooseFSRuntimeLister implements the GooseFSRuntimeLister interface.
type gooseFSRuntimeLister struct {
	indexer cache.Indexer
}

// NewGooseFSRuntimeLister returns a new GooseFSRuntimeLister.
func NewGooseFSRuntimeLister(indexer cache.Indexer) GooseFSRuntimeLister {
	return &gooseFSRuntimeLister{indexer: indexer}
}

// List lists all GooseFSRuntimes in the indexer.
func (s *gooseFSRuntimeLister) List(selector labels.Selector) (ret []*v1alpha1.GooseFSRuntime, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GooseFSRuntime))
	})
	return ret, err
}

// GooseFSRuntimes returns an object that can list and get GooseFSRuntimes.
func (s *gooseFSRuntimeLister) GooseFSRuntimes(namespace string) GooseFSRuntimeNamespaceLister {
	return gooseFSRuntimeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GooseFSRuntimeNamespaceLister helps list and get GooseFSRuntimes.
// All objects returned here must be treated as read-only.
type GooseFSRuntimeNamespaceLister interface {
	// List lists all GooseFSRuntimes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GooseFSRuntime, err error)
	// Get retrieves the GooseFSRuntime from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GooseFSRuntime, error)
	GooseFSRuntimeNamespaceListerExpansion
}

// gooseFSRuntimeNamespaceLister implements the GooseFSRuntimeNamespaceLister
// interface.
type gooseFSRuntimeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GooseFSRuntimes in the indexer for a given namespace.
func (s gooseFSRuntimeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GooseFSRuntime, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GooseFSRuntime))
	})
	return ret, err
}

// Get retrieves the GooseFSRuntime from the indexer for a given namespace and name.
func (s gooseFSRuntimeNamespaceLister) Get(name string) (*v1alpha1.GooseFSRuntime, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("goosefsruntime"), name)
	}
	return obj.(*v1alpha1.GooseFSRuntime), nil
}
