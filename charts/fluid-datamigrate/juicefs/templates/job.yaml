{{- if or (eq (lower .Values.datamigrate.policy) "") (eq (lower .Values.datamigrate.policy) "once") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-migrate" .Release.Name }}
  labels:
    release: {{ .Release.Name }}
    role: datamigrate-job
    app: juicefs
    targetDataset: {{ required "targetDataset should be set" .Values.datamigrate.targetDataset }}
    {{- include "library.fluid.labels" . | nindent 4 }}
  ownerReferences:
  {{- if .Values.owner.enabled }}
    - apiVersion: {{ .Values.owner.apiVersion }}
      blockOwnerDeletion: {{ .Values.owner.blockOwnerDeletion }}
      controller: {{ .Values.owner.controller }}
      kind: {{ .Values.owner.kind }}
      name: {{ .Values.owner.name }}
      uid: {{ .Values.owner.uid }}
  {{- end }}
spec:
  backoffLimit: {{ .Values.datamigrate.backoffLimit | default "3" }}
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: {{ printf "%s-migrate" .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
      {{- if .Values.datamigrate.annotations }}
      {{- range $key, $val := .Values.datamigrate.annotations }}
        {{ $key | quote }}: {{ $val | quote }}
      {{- end }}
      {{- end }}
      labels:
        release: {{ .Release.Name }}
        role: datamigrate-pod
        app: juicefs
        targetDataset: {{ required "targetDataset should be set" .Values.datamigrate.targetDataset }}
        fluid.io/operation: migrate-{{ .Release.Namespace }}-{{ .Release.Name }}
      {{- if .Values.datamigrate.labels }}
      {{- range $key, $val := .Values.datamigrate.labels }}
        {{ $key | quote }}: {{ $val | quote }}
      {{- end }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- with .Values.datamigrate.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.datamigrate.schedulerName }}
      schedulerName: {{ .Values.datamigrate.schedulerName }}
      {{- end }}
      {{- with .Values.datamigrate.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.datamigrate.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.datamigrate.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: datamigrate
          # juice fs with openssh client
          image: {{ required "DataMigrate image should be set" .Values.datamigrate.image }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args: ["/scripts/juicefs_datamigrate.sh"]
          {{- if .Values.datamigrate.resources }}
          resources:
          {{- toYaml .Values.datamigrate.resources | nindent 12}}
          {{- end }}
          env:
            - name: PARALLELISM
              value: {{ .Values.datamigrate.parallelism | quote }}
            {{- if gt (.Values.datamigrate.parallelism | int) 1 }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SSH_READY_TIMEOUT
              value: {{ .Values.datamigrate.parallelOptions.sshReadyTimeoutSeconds | quote }}
            - name: TARGET_SSH_PORT
              value: "{{ .Values.datamigrate.parallelOptions.sshPort }}"
            - name: WORKER_NAME_FORMAT
              value: {{ printf "%s-workers-{}.%s-workers" .Release.Name .Release.Name }}
            {{- end }}
            {{- range $key, $val := .Values.datamigrate.options }}
            {{- if eq $key "timeout" }}
            - name: TIMEOUT
              value: {{ $val | quote }}
            {{- end }}
            {{- if eq $key "edition" }}
            - name: EDITION
              value: {{ $val | quote }}
            {{- end }}
            {{- if eq $key "option" }}
            - name: OPTION
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
            {{- range .Values.datamigrate.encryptOptions }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end }}
          volumeMounts:
            - mountPath: /scripts
              name: data-migrate-script
            {{- with .Values.datamigrate.nativeVolumeMounts }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
            {{- if gt (.Values.datamigrate.parallelism | int) 1 }}
            - mountPath: /root/.ssh
              name: data-migrate-ssh
              # use subpath to avoid permissions check problem because the launcher will ssh to itself.
              # Or user can set 'StrictModes no' in /etc/ssh/sshd_config file to avoid permission check when build the image in dockerfile.
              subPath: .ssh
            {{- end }}
      volumes:
        {{- if gt (.Values.datamigrate.parallelism | int) 1 }}
        - name: data-migrate-ssh
          secret:
            secretName: {{.Values.datamigrate.parallelOptions.sshSecretName }}
            defaultMode: 0600
            items:
              - key: ssh-privatekey
                path: .ssh/id_rsa
              - key: ssh-publickey
                path: .ssh/id_rsa.pub
              - key: ssh-publickey
                path: .ssh/authorized_keys
        {{- end }}
        - name: data-migrate-script
          configMap:
            name: {{ printf "%s-script" .Release.Name }}
            items:
              - key: datamigrate.sh
                path: juicefs_datamigrate.sh
                mode: 365
              - key: check_ssh.sh
                path: check_ssh.sh
                mode: 365
      {{- with .Values.datamigrate.nativeVolumes }}
        {{ toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
