{{- if gt (.Values.datamigrate.parallelism | int) 1 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-workers" .Release.Name }}
  labels:
    release: {{ .Release.Name }}
    role: datamigrate-job
    {{- include "library.fluid.labels" . | nindent 4 }}
  ownerReferences:
  {{- if .Values.owner.enabled }}
    - apiVersion: {{ .Values.owner.apiVersion }}
      blockOwnerDeletion: {{ .Values.owner.blockOwnerDeletion }}
      controller: {{ .Values.owner.controller }}
      kind: {{ .Values.owner.kind }}
      name: {{ .Values.owner.name }}
      uid: {{ .Values.owner.uid }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ printf "%s-workers" .Release.Name }}
  # match the service name
  serviceName: {{ printf "%s-workers" .Release.Name }}
  # the job acts as a worker, so minus 1 here.
  replicas: {{ sub .Values.datamigrate.parallelism  1 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ printf "%s-workers" .Release.Name }}
        fluid.io/operation: migrate-{{ .Release.Namespace }}-{{ .Release.Name }}
    spec:
      containers:
        - name: worker
          # juice fs with openssh server
          image: {{ required "DataMigrate image should be set" .Values.datamigrate.image }}
          imagePullPolicy: IfNotPresent
          command: [ "/usr/sbin/sshd", "-D" , "-p", "{{ .Values.datamigrate.parallelOptions.sshPort }}"]
          readinessProbe:
            exec:
              command:
                - /etc/fluid/scripts/check.sh
          ports:
            - containerPort: {{ .Values.datamigrate.parallelOptions.sshPort }}
          {{- if .Values.datamigrate.resources }}
          resources:
          {{- toYaml .Values.datamigrate.resources | nindent 12}}
          {{- end }}
          env:
            - name: TARGET_SSH_PORT
              value: "{{ .Values.datamigrate.parallelOptions.sshPort }}"
            {{- range .Values.datamigrate.encryptOptions }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end }}
          volumeMounts:
            - mountPath: /root/.ssh
              name: data-migrate-ssh
              # use subpath to avoid permissions check problem because the launcher will ssh to workers.
              # Or user can set 'StrictModes no' in /etc/ssh/sshd_config file to avoid permission check when build the image in dockerfile.
              subPath: .ssh
            - mountPath: /etc/fluid/scripts
              name: data-migrate-script
      {{- with .Values.datamigrate.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data-migrate-ssh
          secret:
            secretName: {{.Values.datamigrate.parallelOptions.sshSecretName }}
            defaultMode: 0600
            items:
              - key: ssh-privatekey
                path: .ssh/id_rsa
              - key: ssh-publickey
                path: .ssh/id_rsa.pub
              - key: ssh-publickey
                path: .ssh/authorized_keys
        - name: data-migrate-script
          configMap:
            name: {{ printf "%s-script" .Release.Name }}
            items:
              - key: ssh.readiness
                path: check.sh
                mode: 365
{{- end }}
