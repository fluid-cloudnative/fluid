apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-migrate" .Release.Name }}
  labels:
    release: {{ .Release.Name }}
    role: datamigrate-job
    app: juicefs
    targetDataset: {{ required "targetDataset should be set" .Values.datamigrate.targetDataset }}
spec:
  backoffLimit: {{ .Values.datamigrate.backoffLimit | default "3" }}
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: {{ printf "%s-migrate" .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
      {{- if .Values.datamigrate.annotations }}
      {{- range $key, $val := .Values.datamigrate.annotations }}
        {{ $key | quote }}: {{ $val | quote }}
      {{- end }}
      {{- end }}
      labels:
        release: {{ .Release.Name }}
        role: datamigrate-pod
        app: juicefs
        targetDataset: {{ required "targetDataset should be set" .Values.datamigrate.targetDataset }}
      {{- if .Values.datamigrate.labels }}
      {{- range $key, $val := .Values.datamigrate.labels }}
        {{ $key | quote }}: {{ $val | quote }}
      {{- end }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- with .Values.datamigrate.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: datamigrate
          image: {{ required "DataMigrate image should be set" .Values.datamigrate.image }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args: ["/scripts/juicefs_datamigrate.sh"]
          env:
            {{- range $key, $val := .Values.datamigrate.options }}
            {{- if eq $key "timeout" }}
            - name: TIMEOUT
              value: {{ $val | quote }}
            {{- end }}
            {{- if eq $key "edition" }}
            - name: EDITION
              value: {{ $val | quote }}
            {{- end }}
            {{- if eq $key "option" }}
            - name: OPTION
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
            {{- range .Values.datamigrate.encryptOptions }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ required "targetDataset should be set" .Values.datamigrate.targetDataset }}-juicefs-values
          volumeMounts:
            - mountPath: /scripts
              name: data-migrate-script
      volumes:
        - name: data-migrate-script
          configMap:
            name: {{ printf "%s-script" .Release.Name }}
            items:
              - key: datamigrate.sh
                path: juicefs_datamigrate.sh
                mode: 365
