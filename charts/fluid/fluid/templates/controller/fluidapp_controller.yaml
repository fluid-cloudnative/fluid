---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluidapp-controller
  namespace: {{ include "fluid.namespace" . }}
  labels:
    control-plane: fluidapp-controller
spec:
  selector:
    matchLabels:
      control-plane: fluidapp-controller
  {{ if .Values.fluidapp.enabled -}}
  replicas: {{ .Values.fluidapp.replicas }}
  {{- else }}
  replicas: 0
  {{- end }}
  template:
    metadata:
      labels:
        control-plane: fluidapp-controller
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: fluidapp-controller
      {{ include "fluid.controlplane.affinity" . | nindent 6}}
      {{- if .Values.fluidapp.tolerations }}
      tolerations:
{{ toYaml .Values.fluidapp.tolerations | indent 6 }}
      {{- end }}
      #hostNetwork: true
      containers:
      - image: {{ include "fluid.controlplane.imageTransform" (list .Values.fluidapp.controller.imagePrefix .Values.fluidapp.controller.imageName .Values.fluidapp.controller.imageTag . ) }}
        name: manager
        command: ["fluidapp-controller", "start"]
        args:
          - --development=false
          - --pprof-addr=:6060
          - --enable-leader-election
          - --leader-election-namespace={{ include "fluid.namespace" . }}
          - --feature-gates={{ .Values.fluidapp.featureGates }}
        env:
        {{- if .Values.workdir }}
          - name: FLUID_WORKDIR
            value: {{ .Values.workdir | quote }}
        {{- end }}
        ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
        resources:
          {{- include "fluid.controlplane.resources" (list $ .Values.fluidapp.resources) | nindent 10 }}
      terminationGracePeriodSeconds: 10
