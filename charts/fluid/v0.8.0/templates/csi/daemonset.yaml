kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-nodeplugin-fluid
  namespace: fluid-system
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: csi-nodeplugin-fluid
  template:
    metadata:
      labels:
        app: csi-nodeplugin-fluid
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: fluid-csi
      tolerations:
      - operator: Exists
      #priorityClassName: system-node-critical
      {{- if .Values.csi.config.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      hostPID: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      containers:
      - name: node-driver-registrar
        image: "{{ .Values.csi.registrar.image }}"
        args:
          - --v=5
          - --csi-address={{ .Values.csi.kubelet.rootDir }}/csi-plugins/fuse.csi.fluid.io/csi.sock
          - --kubelet-registration-path={{ .Values.csi.kubelet.rootDir }}/csi-plugins/fuse.csi.fluid.io/csi.sock
        env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - name: kubelet-dir
            mountPath: {{ .Values.csi.kubelet.rootDir }}
            mountPropagation: "HostToContainer"
          - name: registration-dir
            mountPath: /registration
      - name: plugins
        securityContext:
          privileged: true
          runAsUser: 0
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        image: "{{ .Values.csi.plugins.image }}"
        command: ["/usr/local/bin/entrypoint.sh"]
        args:
          - "--nodeid=$(NODE_ID)"
          - "--endpoint=$(CSI_ENDPOINT)"
          - --v=5
          {{- if .Values.csi.featureGates }}
          - --feature-gates={{ .Values.csi.featureGates }}
          {{- end }}
          {{- if .Values.csi.pruneFs }}
          - --prune-fs={{ .Values.csi.pruneFs }}
          {{- end }}
          - --prune-path={{ .Values.runtime.mountRoot }}
          - "--pprof-addr=:6060"
        env:
          - name: NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- if .Values.runtime.mountRoot }}
          - name: MOUNT_ROOT
            value: {{ .Values.runtime.mountRoot | quote }}
          {{- end }}
          - name: ALLOW_PATCH_STALE_NODE
            value: "true"
          - name: KUBELET_ROOTDIR
            value: {{ .Values.csi.kubelet.rootDir }}
          - name: CSI_ENDPOINT
            value: unix://{{ .Values.csi.kubelet.rootDir }}/csi-plugins/fuse.csi.fluid.io/csi.sock
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
          - name: plugin-dir
            mountPath: /plugin
          - name: kubelet-dir
            mountPath: {{ .Values.csi.kubelet.rootDir }}
            mountPropagation: "Bidirectional"
          - name: fluid-src-dir
            mountPath: {{ .Values.runtime.mountRoot | quote }}
            mountPropagation: "Bidirectional"
          - name: host-etc-dir
            mountPath: /host-etc
      volumes:
        - name: kubelet-dir
          hostPath:
            path: {{ .Values.csi.kubelet.rootDir }}
            type: Directory
        - name: plugin-dir
          hostPath:
            path: {{ .Values.csi.kubelet.rootDir }}/plugins/csi-fluid-plugin
            type: DirectoryOrCreate
        - hostPath:
            path: {{ .Values.csi.kubelet.rootDir }}/plugins_registry
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: {{ .Values.runtime.mountRoot | quote }}
            type: DirectoryOrCreate
          name: fluid-src-dir
        - hostPath:
            path: /etc
            type: Directory
          name: host-etc-dir
