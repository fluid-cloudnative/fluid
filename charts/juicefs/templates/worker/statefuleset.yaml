apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "juicefs.fullname" . }}-worker
  labels:
    app: {{ template "juicefs.name" . }}
    chart: {{ template "juicefs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: juicefs-worker
    fluid.io/dataset: {{ .Release.Namespace }}-{{ .Release.Name }}
    fluid.io/dataset-placement: {{ .Values.placement }}
  ownerReferences:
  {{- if .Values.owner.enabled }}
    - apiVersion: {{ .Values.owner.apiVersion }}
      blockOwnerDeletion: {{ .Values.owner.blockOwnerDeletion }}
      controller: {{ .Values.owner.controller }}
      kind: {{ .Values.owner.kind }}
      name: {{ .Values.owner.name }}
      uid: {{ .Values.owner.uid }}
  {{- end }}
spec:
  replicas: {{ .Values.worker.replicas }}
  serviceName: {{ template "juicefs.fullname" . }}-worker
  selector:
    matchLabels:
      app: {{ template "juicefs.name" . }}
      chart: {{ template "juicefs.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: juicefs-worker
  template:
    metadata:
      {{- if .Values.worker.annotations }}
      annotations:
      {{- range $key, $val := .Values.worker.annotations}}
        {{ $key | quote }}: {{ $val | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "juicefs.name" . }}
        chart: {{ template "juicefs.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: juicefs-worker
        fluid.io/dataset: {{ .Release.Namespace }}-{{ .Release.Name }}
        fluid.io/dataset-placement: {{ .Values.placement }}
        {{- if .Values.worker.labels }}
        {{- range $key, $val := .Values.worker.labels }}
        {{ $key | quote}}: {{ $val | quote }}
        {{- end }}
        {{- end }}
    spec:
      nodeSelector:
      {{- if .Values.worker.nodeSelector }}
{{ toYaml .Values.worker.nodeSelector | trim | indent 8  }}
      {{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
        - name: juicefs-worker
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.worker.resources  }}
          resources:
{{ toYaml .Values.worker.resources | trim | indent 12  }}
          {{- end }}
          command: ["sh", "/root/script/script.sh"]
          {{- if .Values.worker.privileged }}
          securityContext:
            privileged: true
          {{- end }}
          {{- if .Values.worker.ports }}
          ports:
{{ toYaml .Values.worker.ports | trim | indent 10  }}
          {{- end }}
          env:
          - name: JFS_FOREGROUND
            value: "1"
          {{- if .Values.worker.envs }}
{{ toYaml .Values.worker.envs | trim | indent 10  }}
          {{- end }}
          {{- if .Values.configs.metaurlSecret }}
          - name: METAURL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.configs.metaurlSecret }}
                key: metaurl
          {{- end }}
          {{- if .Values.configs.accesskeySecret }}
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.configs.accesskeySecret }}
                key: access-key
          {{- end }}
          {{- if .Values.configs.secretkeySecret }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.configs.secretkeySecret }}
                key: secret-key
          {{- end }}
          {{- if .Values.configs.tokenSecret }}
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.configs.tokenSecret }}
                key: token
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "umount {{ .Values.worker.mountPath }}"]
          volumeMounts:
            - mountPath: /root/script
              name: script
            {{- range $name, $mount := .Values.cacheDirs }}
            - name: cache-dir-{{ $name }}
              mountPath: "{{ $mount.path }}"
            {{- end }}
      restartPolicy: Always
      volumes:
        {{- range $name, $mount := .Values.cacheDirs }}
        {{- if eq $mount.type "hostPath" }}
        - hostPath:
            path:  "{{ $mount.path }}"
            type: DirectoryOrCreate
          name: cache-dir-{{ $name }}
          {{- else if eq $mount.type "emptyDir" }}
        - emptyDir: {}
          name: cache-dir-{{ $name }}
        {{- /* todo: support volume template */}}
        {{- end }}
        {{- end }}
        - name: script
          configMap:
            name: {{ template "juicefs.fullname" . }}-worker-script
            defaultMode: 0755
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "juicefs.fullname" . }}-worker-script
  labels:
    app: {{ template "juicefs.name" . }}
    chart: {{ template "juicefs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: juicefs-worker
data:
  script.sh: |
    #!/bin/bash

    {{- if .Values.configs.formatCmd }}
    {{ .Values.configs.formatCmd }}
    {{- end }}

    {{ .Values.worker.command }}
